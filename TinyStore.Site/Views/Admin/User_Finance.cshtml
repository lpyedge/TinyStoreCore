<q-page padding>
    <div class="text-h5 text-weight-bold text-grey-8">
        <q-icon :name="userlinks[1].icon" size="md" class="on-left"></q-icon>{{userlinks[1].text}}
    </div>
    <q-separator class="q-my-sm"></q-separator>
    
    <div class="row q-gutter-md" style="height: 7rem;">
        <q-card class="col relative-position bg-primary text-white">
            <div class="fit q-pa-sm absolute-center column text-center" >
                <div class="col  text-subtitle1">
                    <label>资金</label>
                </div>
                <div class="col text-h5">
                    <q-icon name="fas fa-yen-sign" size="1.1rem"></q-icon>{{ userFinace.amount }}
                </div>
            </div>
        </q-card>
        <q-card class="col relative-position bg-orange text-white" >
            <div class="fit q-pa-sm absolute-center column text-center" >
                <div class="col text-subtitle1">
                    <label>签帐</label>
                </div>
                <div class="col text-h5">
                    <q-icon name="fas fa-yen-sign" size="1.1rem"></q-icon>{{ userFinace.amountCharge }}
                </div>
            </div>
        </q-card>
        <q-card class="col relative-position bg-positive text-white" >
            <div class="fit q-pa-sm absolute-center column text-center" >
                <div class="col text-subtitle1">
                    <label>提现</label> 
                </div>
                <div class="col text-h5">
                    <q-icon name="fas fa-yen-sign" size="1.1rem"></q-icon>{{ userFinace.withDraw }}
                </div>
            </div>
        </q-card>
    </div>
    
    <q-separator class="q-my-sm"></q-separator>
    
    <div class="row q-gutter-xs q-mx-none q-my-sm">
        <div class="q-gutter-sm on-left">
              <q-radio keep-color v-model="billFilter.financeType" val="bill" label="账目" color="primary" />
              <q-radio keep-color v-model="billFilter.financeType" val="withDraw" label="提现" color="positive" />
        </div>
        <q-input outlined dense stack-label bg-color="white" style="min-width: 230px;"
                 readonly
                 class="col-xs-12 col-md-auto"
                 :label="billFilter.financeType == 'bill' ? '账目日期' : '提现日期' "
                 :value="billFilter.dateRange ? (Object.prototype.toString.call(billFilter.dateRange) === '[object String]' ? billFilter.dateRange + ' 至 ' + billFilter.dateRange : billFilter.dateRange.from + ' 至 ' + billFilter.dateRange.to) : '' "
                 @@clear="v=>billFilter.dateRange = null">
            <template v-slot:append>
                <q-icon name="event" color="primary" class="cursor-pointer">
                    <q-popup-proxy transition-show="scale" transition-hide="scale">
                        <q-date range mask="YYYY-MM-DD"
                                v-model="billFilter.dateRange"
                                :options="dateRangeOptionsFn">
                            <div class="row items-center justify-between">
                                <div class="col-auto">
                                    <q-btn v-close-popup label="上月" color="accent" @@click="billFilter.dateRange = {from:Quasar.date.formatDate(Quasar.date.subtractFromDate(Quasar.date.adjustDate(Date.now(),{date:1}),{month:1}),'YYYY-MM-DD'),to:Quasar.date.formatDate(Quasar.date.subtractFromDate(Quasar.date.adjustDate(Date.now(),{date:1}),{days:1}),'YYYY-MM-DD')}" class="col-shrink self-start"></q-btn>
                                    <q-btn v-close-popup label="本月" color="accent" @@click="billFilter.dateRange = {from:Quasar.date.formatDate(Quasar.date.adjustDate(Date.now(),{date:1}),'YYYY-MM-DD'),to:Quasar.date.formatDate(Date.now(),'YYYY-MM-DD')}" class="col-shrink self-start"></q-btn>
                                </div>
                                <div class="col-auto">
                                    <q-btn v-close-popup :label="$q.lang.label.clear" color="warning" flat @@click="billFilter.dateRange = null"></q-btn>
                                    <q-btn v-close-popup :label="$q.lang.label.ok" color="primary" flat></q-btn>
                                </div>
                            </div>
                        </q-date>
                    </q-popup-proxy>
                </q-icon>
            </template>
        </q-input>
        <q-select outlined dense options-dense stack-label bg-color="white" style="min-width: 140px"
                  v-if="billFilter.financeType == 'bill'"
                  class="col-auto"
                  label="账目类型"
                  emit-value
                  map-options
                  v-model="billFilter.billType"
                  :options="billTypeOptions">
        </q-select>
        <q-toggle v-if="billFilter.financeType == 'withDraw'" class="col-auto" toggle-indeterminate v-model="billFilter.isFinish" color="orange" label="是否结束" left-label></q-toggle>
        <q-space></q-space>
        <q-btn :loading="billFilter.loading" class="col-shrink" color="primary" icon="search" label="搜索" @@click="loadData"></q-btn>
    </div>
    
<q-table v-show="billFilter.financeType == 'bill'"
         :grid="!$q.platform.is.desktop"
             
         row-key="billId"
         :data="billData"
         :columns="billColumns"
             
         :pagination.sync="billFilter.pagination"
         :rows-per-page-options="[10, 25, 50, 100, 200]"
         @@request="loadBillData">
    <template v-slot:body="props">
        <q-tr :props="props">
            <q-td key="billType" class="text-weight-bolder">
                {{billTypeName(props.row.billType)}}
            </q-td>
            <q-td key="amount">
                <q-badge v-if="props.row.amount !== 0" class="on-right cursor-pointer text-subtitle2" color="primary">
                    <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amount }}
                    <q-tooltip>资金额度变动</q-tooltip>
                </q-badge>
                <q-badge v-if="props.row.amountCharge !== 0" class="on-right cursor-pointer text-subtitle2" color="orange">
                    <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amountCharge }}
                    <q-tooltip>签帐额度变动</q-tooltip>
                </q-badge>
            </q-td>
            <q-td key="createDate">
                {{ Quasar.date.formatDate(props.row.createDate,'YYYY-MM-DD HH:mm') }}
            </q-td>
        </q-tr>
    </template>
    <template v-slot:item="props">
        <q-card class="q-pa-xs col-12">
            <q-card-section class="q-pa-sm row">
                <div class="col-auto text-weight-bolder">
                    {{billTypeName(props.row.billType)}}
                </div>
                <div class="col text-center">
                    <q-badge v-if="props.row.amount !== 0" class="on-right cursor-pointer text-subtitle2" color="primary">
                        <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amount }}
                        <q-tooltip>资金额度变动</q-tooltip>
                    </q-badge>
                    <q-badge v-if="props.row.amountCharge !== 0" class="on-right cursor-pointer text-subtitle2" color="orange">
                        <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amountCharge }}
                        <q-tooltip>签帐额度变动</q-tooltip>
                    </q-badge>
                </div>
                <div class="col-auto text-center">
                    {{ Quasar.date.formatDate(props.row.createDate,'YYYY-MM-DD HH:mm') }}
                </div>
            </q-card-section>
        </q-card>
    </template>
</q-table>

    <q-table v-show="billFilter.financeType == 'withDraw'"
             :grid="!$q.platform.is.desktop"
             
             row-key="withDrawId"
             :data="withDrawData"
             :columns="withDrawColumns"
             
             :pagination.sync="billFilter.pagination"
             :rows-per-page-options="[10, 25, 50, 100, 200]"
             @@request="loadWithDrawData">
        <template v-slot:body="props">
            <q-tr :props="props">
                <q-td key="bankType" class="text-weight-bolder">
                    {{ bankTypeName(props.row.bankType) }}
                </q-td>
                <q-td key="bankAccount" class="text-weight-bolder">
                    {{ props.row.bankAccount }} / {{ props.row.bankPersonName }}
                </q-td>
                <q-td key="amount">
                    <q-badge class="on-right cursor-pointer text-subtitle2" color="positive">
                        <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amount }}
                        <q-tooltip>提现金额</q-tooltip>
                    </q-badge>
                    <q-badge v-if="props.row.isFinish" class="on-right cursor-pointer text-subtitle2" color="orange">
                        <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amountFinish }}
                        <q-tooltip v-if="props.row.amountFinish != 0">{{ props.row.tranId }}</q-tooltip>
                        <q-tooltip v-else>{{ props.row.memo }}</q-tooltip>
                    </q-badge>
                    <q-btn v-else outline label="提现" color="orange" size="sm" @@click="withDrawDialogShow(props.rowIndex)"></q-btn>
                </q-td>
                <q-td key="createDate">
                    {{ Quasar.date.formatDate(props.row.createDate,'YYYY-MM-DD HH:mm') }}
                </q-td>
            </q-tr>
        </template>
        <template v-slot:item="props">
            <q-card class="q-pa-xs col-12">
                <q-card-section class="q-pa-sm row">
                    <div class="col-auto text-weight-bolder">
                        {{ bankTypeName(props.row.bankType) }}
                    </div>
                    <div class="col text-weight-bolder text-right">
                        {{ props.row.bankAccount }} / {{ props.row.bankPersonName }}
                    </div>
                </q-card-section>
                <q-card-section class="q-pa-sm row">
                    <div class="col text-left">
                        <q-badge class="cursor-pointer text-subtitle2" color="positive">
                            <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amount }}
                            <q-tooltip>提现金额</q-tooltip>
                        </q-badge>
                        <q-badge v-if="props.row.isFinish" class="on-right cursor-pointer text-subtitle2" color="orange">
                            <q-icon name="fas fa-yen-sign" size="0.7rem"></q-icon>{{ props.row.amountFinish }}
                            <q-tooltip v-if="props.row.amountFinish != 0">{{ props.row.tranId }}</q-tooltip>
                            <q-tooltip v-else>{{ props.row.memo }}</q-tooltip>
                        </q-badge>
                        <q-btn v-else outline label="提现" color="orange" size="sm" @@click="withDrawDialogShow(props.rowIndex)"></q-btn>
                    </div>
                    <div class="col-auto text-right">
                        {{ Quasar.date.formatDate(props.row.createDate,'YYYY-MM-DD HH:mm') }}
                    </div>
                </q-card-section>
            </q-card>
        </template>
    </q-table>
</q-page>

<q-dialog v-model="withDrawDialog">
    <q-card style="max-width: 500px; width: 500px;">
        <q-card-section class="row items-center q-pb-none">
            <div class="text-h6">提现操作</div>
            <q-space ></q-space>
            <q-btn icon="close" flat round dense v-close-popup></q-btn>
        </q-card-section>
        <q-card-section class="q-gutter-sm">
            <q-toggle color="green" v-model="withDrawCurrent.isTran">到账</q-toggle>
            <q-input outlined dense stack-label bg-color="white"
                     v-if="withDrawCurrent.isTran"
                     label="到账金额"
                     hint="除非特殊情况，一般不需修改到账金额"
                     v-model.number="withDrawCurrent.amountFinish"
                     ref="withDrawCurrent_amountFinish"
                     :rules="[val => !!val || '必须输入商品名称',val => val > 0 || '到账金额必须输入大于等于0的数字']">
            </q-input>
            <q-input outlined dense stack-label bg-color="white"
                     v-if="withDrawCurrent.isTran"
                     label="交易单号"
                     v-model.trim="withDrawCurrent.tranId">
            </q-input>
            <q-input outlined dense stack-label bg-color="white"
                     v-if="!withDrawCurrent.isTran"
                     autogrow
                     label="说明内容"
                     v-model.trim="withDrawCurrent.memo"
                     maxlength="200"
                     ref="withDrawCurrent_memo"
                     :rules="[val => !!val || '必须输入说明内容',val => val.length > 5 || '说明内容长度不得少于5']">
            </q-input>
        </q-card-section>
        <q-card-section class="row justify-between">
            <q-space></q-space>
            <q-btn color="warning" icon="save" label="保存" @@click="withDrawDialogSave"></q-btn>
        </q-card-section>
    </q-card>
</q-dialog>

@section Scripts{

    <script>
   var _page = {
       data:{
           billFilter:{
               loading:false,
               dateRange:{
                    from:Quasar.date.formatDate(Quasar.date.adjustDate(Date.now(),{date:1}),'YYYY-MM-DD'),
                    to:Quasar.date.formatDate(Date.now(),'YYYY-MM-DD')
               },
               financeType:'withDraw',
               billType:0,
               isFinish:null,
               pagination:{                   
                   page: 1,
                   rowsPerPage: 25,
                   rowsNumber:0,
               },
           },
           
           userFinace:{},
             
           billData:[],
           billColumns:[
               {
                   align: 'left',
                   name:'billType',
                   label:'账目类型',
               },
               {
                   align: 'left',
                   name:'amount',
                   label:'账目金额',
               },
               {
                   align: 'left',
                   name:'createDate',
                   label:'账目日期',
               }
           ],
           
           withDrawData:[],
           withDrawColumns:[               
               {
                   align: 'left',
                   name:'bankType',
                   label:'提现方式',
               },            
               {
                   align: 'left',
                   name:'bankAccount',
                   label:'账户 / 名称',
               },
               {
                   align: 'left',
                   name:'amount',
                   label:'提现金额',
               },
               {
                   align: 'left',
                   name:'createDate',
                   label:'提现日期',
               }
           ],
           
           withDrawIndex:-2,//默认 -2 其他 索引值
           withDrawCurrent:{},
           withDrawDialog:false,
       },
       beforeMount(){
           AdminApi('UserFinace')
            .then((response)=> {
                if (response.data.code === 1){ 
                    this.userFinace = response.data.data;
                } else{
                    Notify.Warning('数据加载失败');
                }
            })
            .catch( (error)=> {
                Notify.Warning('接口通信错误');
                console.error(error);
            });
           
           this.loadData();
       },
       watch:{
           'billFilter.financeType':function (){
               this.billFilter.pagination = { page: 1, rowsPerPage: 25, rowsNumber:0,};
               this.billFilter.billType = 0;
               this.billFilter.isFinish=null;
           }
       },
       computed:{
           billTypeOptions(){
               var data = [];
               data.push({value:0,label:'全部*'});
               var options =@Json.Serialize(Global.EnumsOptions<EBillType>());
               for (i in options){
                   data.push(options[i]);
               }
               return data;
           },
           bankTypeOptions(){
               var data = [];
               var options =@Json.Serialize(Global.EnumsOptions<EBankType>());
               for (i in options){
                   data.push(options[i]);
               }
               return data;
           }
       },
       methods: {
           loadData(){
               if (this.billFilter.financeType === 'bill'){
                   this.loadBillData();
               }else if (this.billFilter.financeType === 'withDraw'){                   
                   this.loadWithDrawData();
               }
           },
           loadWithDrawData(){
               if(arguments.length>0 && arguments[0].pagination){
                   this.billFilter.pagination = arguments[0].pagination;
               }
               
               var dateFrom='', dateTo='';
               if(this.billFilter.dateRange){            
                 var dateRangeType = Object.prototype.toString.call(this.billFilter.dateRange);
                 if (dateRangeType === '[object String]'){
                      dateFrom=this.billFilter.dateRange;    
                      dateTo=this.billFilter.dateRange;                    
                 }else{
                      dateFrom=this.billFilter.dateRange.from;    
                      dateTo=this.billFilter.dateRange.to; 
                 }
               }
              
              if (dateFrom==='' && dateTo===''){
                  Notify.Warning('账目日期不能为空');
                  return;
              }
              
              this.billFilter.loading =true;
              
               AdminApi('WithDrawPageList',{
                   from:dateFrom,
                   to:dateTo,
                   isFinish:this.billFilter.isFinish,
                   pageSize:this.billFilter.pagination.rowsPerPage,
                   pageIndex:this.billFilter.pagination.page},true)
                   .then((response)=> {
                    if (response.data.code === 1){ 
                        this.withDrawData = response.data.data.rows; 
                        this.billFilter.pagination.rowsNumber = response.data.data.total;
                    } else{
                        Notify.Warning('提现记录加载失败');
                    }
                    this.billFilter.loading =false;
                })
                .catch( (error)=> {
                    this.billFilter.loading =false;
                    Notify.Warning('接口通信错误');
                    console.error(error);
                });
           },
           loadBillData(){
               if(arguments.length>0 && arguments[0].pagination){
                   this.billFilter.pagination = arguments[0].pagination;
               }
               
               var dateFrom='', dateTo='';
               if(this.billFilter.dateRange){            
                  var dateRangeType = Object.prototype.toString.call(this.billFilter.dateRange);
                  if (dateRangeType === '[object String]'){
                       dateFrom=this.billFilter.dateRange;    
                       dateTo=this.billFilter.dateRange;                    
                  }else{
                       dateFrom=this.billFilter.dateRange.from;    
                       dateTo=this.billFilter.dateRange.to; 
                  }
               }
               
               if (dateFrom==='' && dateTo===''){
                   Notify.Warning('账目日期不能为空');
                   return;
               }
               
               this.billFilter.loading =true;
               AdminApi('BillPageList',{
                   from:dateFrom,
                   to:dateTo,
                   billType:this.billFilter.billType,
                   pageSize:this.billFilter.pagination.rowsPerPage,
                   pageIndex:this.billFilter.pagination.page},true)
                  .then((response)=> {
                      if (response.data.code === 1){ 
                          this.billData = response.data.data.rows;
                          this.billFilter.pagination.rowsNumber = response.data.data.total;   
                      } else{
                          Notify.Warning('账目数据加载失败');
                      }
                      this.billFilter.loading =false;
                  })
                  .catch( (error)=> {
                      this.billFilter.loading =false;
                      Notify.Warning('接口通信错误');
                      console.error(error);
                  });
           },
           dateRangeOptionsFn(date){
               var date_end = Quasar.date.formatDate(Date.now(),'YYYY/MM/DD');
               var date_start = Quasar.date.formatDate(Quasar.date.addToDate(Date.now(),{month:-3}),'YYYY/MM/DD');
               return date >= date_start && date <= date_end;
           },
           billTypeName(billType){
               for (i in this.billTypeOptions) {
                 if (this.billTypeOptions[i].value === billType){
                     return this.billTypeOptions[i].label;
                 }
               }
               return '未知';
           },
           bankTypeName(bankType){
               for (i in this.bankTypeOptions) {
                 if (this.bankTypeOptions[i].value === bankType){
                     return this.bankTypeOptions[i].label;
                 }
               }
               return '未知';
           },
           withDrawDialogShow(i){
               this.withDrawIndex = i;
               this.withDrawCurrent = this.withDrawData[this.withDrawIndex];               
               this.withDrawCurrent.amountFinish = this.withDrawCurrent.amount;
               this.$set(this.withDrawCurrent,"isTran",true);
               this.withDrawDialog = true;
           },
           withDrawDialogSave(){
               if(this.withDrawCurrent.isTran){
                     this.$refs.withDrawCurrent_amountFinish.validate();
                     if (!this.$refs.withDrawCurrent_amountFinish.hasError ){
                         if (this.withDrawCurrent.amountFinish > this.withDrawCurrent.amount){
                             this.withDrawCurrent.amountFinish = this.withDrawCurrent.amount;
                         }
                         this.withDrawCurrent.memo = '';
                         this.withDrawCurrent.isFinish = true;                         
                         AdminApi('WithDrawSave',this.withDrawCurrent)
                         .then((response)=> {
                             if (response.data.code === 1){ 
                                 this.withDrawCurrent = {};
                                 this.withDrawIndex = -2;
                                 this.withDrawDialog = false;
                                 this.loadData(); 
                             } else{
                                 Notify.Warning('提现数据保存失败');
                             }
                         })
                         .catch( (error)=> {
                             Notify.Warning('接口通信错误');
                             console.error(error);
                         });
                     }
               }else{                   
                     this.$refs.withDrawCurrent_memo.validate();
                     if (!this.$refs.withDrawCurrent_memo.hasError ){
                         this.withDrawCurrent.amountFinish = 0;
                         this.withDrawCurrent.tranId = '';
                         this.withDrawCurrent.isFinish = true;
                         AdminApi('WithDrawSave',this.withDrawCurrent)
                         .then((response)=> {
                             if (response.data.code === 1){ 
                                 this.withDrawCurrent = {};
                                 this.withDrawIndex = -2;
                                 this.withDrawDialog = false;
                                 this.loadData(); 
                             } else{
                                 Notify.Warning('提现数据保存失败');
                             }
                         })
                         .catch( (error)=> {
                             Notify.Warning('接口通信错误');
                             console.error(error);
                         });
                     }
               }
           }
       }
   };
   DeepMerge(_layout,_page);
   new Vue(_layout);
    </script>
}