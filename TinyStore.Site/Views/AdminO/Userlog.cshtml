<div class="col">
    <p class="mb-3  bd-text-purple-bright">
        @ViewBag.User.Account 的操作列表
    </p>
    <div class="form-inline ">
        <label for="txtDateBegin">起始时间</label>
        <div class="input-group ">
            <input id="txtDateBegin" type="date" class="form-control" value="@DateTime.Now.AddDays(-7).ToString(SiteContext.Config.FormatDate)" />
        </div>
        <label for="txtDateEnd">结束时间</label>
        <div class="input-group">
            <input id="txtDateEnd" type="date" class="form-control" value="@DateTime.Now.ToString(SiteContext.Config.FormatDate)" />
        </div>
        <div class="col-2">
            <select class="form-control" id="slType">
                <option value="0">请选择操作类型</option>
                @foreach (TinyStore.EUserLogType type in Enum.GetValues(typeof(TinyStore.EUserLogType)))
                {
                    <option value="@((int)type)">@type</option>
                }
            </select>
        </div>
        <div class="col-2">
            <button class="btn btn-info" id="btnSearch">搜索</button>
        </div>
    </div>
    <table id="grid" class="table table-striped table-bordered" cellspacing="0" width="100%">
    </table>
</div>
@section Scripts{
    <script>
    var user = @Json.Serialize(ViewBag.User)
    var grid = $('#grid').bootstrapTable(
        $.extend(baseTableoption, {
            uniqueId: "UserLogId",
            columns: [{
                field: 'Name',
                title: '操作名称'
            }, {
                //field: 'UserLogType_str',
                title: '操作类型', formatter: function (value, row, index) {
                        return GetEnumName("slType", row.UserLogType);
                    }
            }, {
                //field: 'CreateDate_str',
                title: '操作日期', formatter: function (value, row, index) {
                        return DatetimeFormat(row.CreateDate)
                    }
            }, {
                field: 'ClientIP',
                title: '客户端IP'
            }]
        })
    );
    QueryPageList = function () {
        var gridopt = grid.bootstrapTable("getOptions");
        CY.Ajax("UserLogPageList", {
            Token: Store.Token()
        }, {
            userid: user.UserId,
            begin: $("#txtDateBegin").val(),
            end: $("#txtDateEnd").val(),
            type: $("#slType").val(),
            pageindex: gridopt.pageNumber,
            pagesize: gridopt.pageSize
        }, function (msg) {
            grid.bootstrapTable('load', msg.Data);
        });
    }
    QueryPageList();

    $("#btnSearch").on("click", QueryPageList);
    </script>
}
