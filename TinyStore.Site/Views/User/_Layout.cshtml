<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>@TinyStore.Site.SiteContext.Config.SiteName</title>
    <partial name="Widgets/_Header"/>
</head>
<body>
<div id="q-app">
    <q-layout view="hHh lpR fFf" class="bg-grey-1">
        <q-header elevated class="bg-primary q-py-xs" style="height: 65px;line-height: 65px;">
            <q-toolbar class="fit">
                <q-btn
                    flat
                    dense
                    round
                    @@click="leftDrawerOpen = !leftDrawerOpen"
                    aria-label="菜单栏"
                    size="lg"
                    icon="menu">
                </q-btn>

                <img src="~/images/logo.png" alt="SiteContext.Config.SiteName" class="full-height"/>
                <q-toolbar-title shrink class="desktop-only">
                    @SiteContext.Config.SiteName
                </q-toolbar-title>

                <q-space></q-space>
                <div class="q-gutter-sm row items-center no-wrap">
                    <q-btn-dropdown class="on-right" flat >
                        <template v-slot:label>
                            <div class="text-subtitle1 text-weight-bold">
                                {{ storeCurrent.name }}
                                @* {{ void ( storeCurrentOrderNotify = _.find(storeOrderNotify,(o)=>{return o.storeId == storeCurrent.storeId;}) )}} *@
                                @* <q-btn dense flat class="on-right" :icon="storeCurrentOrderNotify?'notifications_active':'notifications_off'"> *@
                                @*     <q-badge v-if="storeCurrentOrderNotify" color="red" floating> *@
                                @*         {{storeCurrentOrderNotify.count}} *@
                                @*     </q-badge> *@
                                @*     <q-tooltip>订单提醒</q-tooltip> *@
                                @* </q-btn> *@
                            </div>
                        </template>
                        <q-list>
                            <q-item clickable v-close-popup @@click="setStoreCurrent(i)" v-for="(store,i) in storeList">
                                <q-item-section>
                                    <q-item-label class="text-subtitle1 text-weight-bold">
                                        {{store.name}}
                                    </q-item-label>
                                </q-item-section>
                            </q-item>
                            <q-separator inset></q-separator>
                            <q-item clickable v-close-popup @@click="logoff">
                                <q-item-section>
                                    <q-item-label class="text-subtitle2">
                                         <q-icon class="on-left" name="power_settings_new"></q-icon>退出帐号
                                    </q-item-label>
                                </q-item-section>
                            </q-item>
                        </q-list>
                    </q-btn-dropdown>
                </div>
            </q-toolbar>
        </q-header>

        <q-drawer
            v-model="leftDrawerOpen"
            show-if-above
            bordered
            content-class="bg-grey-2"
            :width="240">
            <q-scroll-area class="fit">
                <q-list padding>
                    <q-item v-ripple clickable @@click="Goto('@Url.ActionLink("index","user")')">
                        <q-item-section avatar>
                            <q-icon color="grey-8" name="home"/>
                        </q-item-section>
                        <q-item-section>
                            <q-item-label class="text-h6 text-grey-8">首页</q-item-label>
                        </q-item-section>
                    </q-item>

                    <q-separator class="q-my-sm"></q-separator>

                    <q-item-label header class="text-weight-bold text-uppercase">
                        商户
                        <q-badge class="on-right cursor-pointer" color="primary">
                            <q-icon name="fas fa-yen-sign" size="0.8rem"></q-icon>{{ userExtend.amount }}
                            <q-tooltip>资金</q-tooltip>
                        </q-badge>
                        <q-badge class="on-right cursor-pointer" color="orange">
                            <q-icon name="fas fa-yen-sign" size="0.8rem"></q-icon>{{ userExtend.amountCharge }}
                            <q-tooltip>签帐额度</q-tooltip>
                        </q-badge>
                    </q-item-label>

                    <q-item v-ripple clickable v-for="link in userlinks" :key="link.text" @@click="Goto(link.url)">
                        <q-item-section avatar>
                            <q-icon color="grey-8" :name="link.icon"/>
                        </q-item-section>
                        <q-item-section>
                            <q-item-label class="text-h6 text-grey-8">{{ link.text }}</q-item-label>
                        </q-item-section>
                    </q-item>

                    <q-separator class="q-my-sm"></q-separator>

                    <q-item-label header class="text-weight-bold text-uppercase">
                        货源
                    </q-item-label>

                    <q-item v-ripple clickable v-for="link in supplylinks" :key="link.text" @@click="Goto(link.url)">
                        <q-item-section avatar>
                            <q-icon color="grey-8" :name="link.icon"/>
                        </q-item-section>
                        <q-item-section>
                            <q-item-label class="text-h6 text-grey-8">{{ link.text }}</q-item-label>
                        </q-item-section>
                    </q-item>

                    <q-separator class="q-my-sm"></q-separator>

                    <q-item-label header class="text-weight-bold text-uppercase">
                        店铺<q-badge class="on-right cursor-pointer">{{storeCurrent.name}}</q-badge>
                    </q-item-label>

                    <q-item v-ripple clickable v-for="link in storelinks" :key="link.text" @@click="Goto(link.url)">
                        <q-item-section avatar>
                            <q-icon color="grey-8" :name="link.icon"/>
                        </q-item-section>
                        <q-item-section>
                            <q-item-label class="text-h6 text-grey-8">{{ link.text }}</q-item-label>
                        </q-item-section>
                    </q-item>

                    <q-separator class="q-mt-md q-mb-lg"></q-separator>

                    <q-item-label header class="text-weight-bold text-uppercase">
                        客服
                    </q-item-label>
                    @if (!string.IsNullOrWhiteSpace(SiteContext.Config.ServiceQQ))
                    {
                        <q-btn flat class="q-mb-sm text-grey-8" icon="fab fa-qq" label="@SiteContext.Config.ServiceQQ" type="a" target="_blank" :href="qqservice('@SiteContext.Config.ServiceQQ')"></q-btn>
                    }
                    @if (!string.IsNullOrWhiteSpace(SiteContext.Config.ServiceEmail) && SiteContext.Config.ServiceEmail.Contains('@'))
                    {
                        <q-btn flat class="q-mb-sm text-grey-8" icon="email" label="@SiteContext.Config.ServiceEmail" type="a" target="_blank" href="mailto:@SiteContext.Config.ServiceEmail?subject=@Uri.EscapeDataString("问题提交")"></q-btn>
                    }
                </q-list>
            </q-scroll-area>
        </q-drawer>

        <q-page-container>
            @RenderBody()
        </q-page-container>
    </q-layout>
</div>
<partial name="Widgets/_BodyEnd"/>
<script>

    var _layout ={
     el: '#q-app',
     data : {
       leftDrawerOpen: false,
       user : Store.User(),
       userExtend : Store.UserExtend(),
       storeList : Store.StoreList(),
       storeCurrent : Store.StoreCurrent(),
       userlinks: [
           { icon: 'person', text: '商户资料',url:'@Url.ActionLink("User_Profile", "User")' },
           { icon: 'lock', text: '密码安全',url:'@Url.ActionLink("User_Secret","User")' },
           { icon: 'local_atm', text: '资金提现',url:'@Url.ActionLink("User_Finance","User")' },
           //{ icon: 'monetization_on', text: '提现管理' },     
           { icon: 'history', text: '操作日志',url:'@Url.ActionLink("User_Log","User")' }
         ],
       supplylinks: [
           { icon: 'fas fa-dolly', text: '货源管理',url:'@Url.ActionLink("Supply_List", "User")' },
           { icon: 'vpn_key', text: '卡密管理',url:'@Url.ActionLink("Supply_Stock", "User")'  },      
         ],
       storelinks: [
           { icon: 'store_mall_directory', text: '店铺资料',url:'@Url.ActionLink("Store_Info","User")'  },
           { icon: 'fas fa-hand-holding-usd', text: '收款设置',url:'@Url.ActionLink("Store_Payment","User")'  },
           { icon: 'card_travel', text: '商品管理',url:'@Url.ActionLink("Store_Product","User")'  },
           { icon: 'local_grocery_store', text: '订单管理',url:'@Url.ActionLink("Store_Order","User")'  },
           { icon: 'insert_chart', text: '销售统计',url:'@Url.ActionLink("Store_Stat","User")' },
         ],
         deliveryTypeOptions:[
             {icon:'vpn_key',name:'卡密',color:'primary',value:1},
             {icon:'pan_tool',name:'人工',color:'primary',value:2},
             {icon:'device_hub',name:'接口',color:'primary',value:3},
         ],
         supplyTypeOptions:[
             { icon:'settings',name:'系统',color:'primary',value :'system'},
             { icon:'account_circle',name:'自定义',color:'primary',value :'custom'},
         ],
         stockIsDeliveryOptions:[
            { icon:'card_travel',name:'在库',color:'primary',value :false},
            { icon:'send',name:'已售',color:'warning',value :true},
         ],
         stockIsShowOptions:[
             { icon:'pause',name:'下架',color:'warning',value :false},
             { icon:'play_circle_filled',name:'上架',color:'primary',value :true},
         ],
       orderIsPayOptions:[
          { icon:'fas fa-yen-sign',name:'未付款',color:'warning',value :false},
          { icon:'fas fa-yen-sign',name:'已付款',color:'accent',value :true},
       ],
       orderIsDeliveryOptions:[
          { icon:'send',name:'未发货',color:'warning',value :false},
          { icon:'send',name:'已发货',color:'accent',value :true},
       ],
       orderIsSettleOptions:[
          { icon:'done_all',name:'未结算',color:'warning',value :false},
          { icon:'done_all',name:'已结算',color:'accent',value :true},
       ]
     },
     beforeCreate(){
         if(!Store.Token()){
             location.href = '@Url.ActionLink("Login", "User")';
         }
     },
    created(){
         //桌面下为 true，手机端为 undefined
         this.leftDrawerOpen=!!this.$q.platform.is.desktop;
    },
     methods: {
         qqservice(qqnumber){
            if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent)) { //移动端
                return 'mqqwpa://im/chat?chat_type=wpa&uin=' + qqnumber + '&version=1&src_type=web&web_src=';
            } else {
                return 'http://wpa.qq.com/msgrd?V=3&uin=' + qqnumber + '&Site=&Menu=yes';
            }
         },
         setStoreCurrent(index){
             Store.StoreCurrent(index);
             this.storeCurrent = Store.StoreCurrent();
         },
         deliveryTypeOption(deliveryType){
             for (i in this.deliveryTypeOptions){
                 if (this.deliveryTypeOptions[i].value === deliveryType){
                     return  this.deliveryTypeOptions[i];
                 }
             }
             return null;
         },
         logoff(){
             Store.TokenRemove();
             Store.UserRemove();
             Store.UserExtendRemove();
             Store.StoreListRemove();
             Store.StoreCurrentRemove();
             location.href = '@Url.ActionLink("login","user")';
         }
     }
   };
    
    function DeepMerge(target, source) {
        function DeepClone(source){
            if (Object.prototype.toString.call(source) === "[object Date]") {
                return  new Date(source.valueOf());
            } else {
                return source;
            }
         }
         
        if (Object.prototype.toString.call(target) === "[object Object]"
         && Object.prototype.toString.call(source) === "[object Object]") {
            for (var name in source){
                if (Object.prototype.toString.call(source[name]) === "[object Object]"){
                    if (target[name]){
                        DeepMerge(target[name],source[name]);                        
                    }else{
                        target[name] = DeepClone(source[name]);
                    }
                }else{
                    target[name] = DeepClone(source[name]);
                }
            }
        } 
    }
</script>
@RenderSection("Scripts", required: false)
</body>
</html>