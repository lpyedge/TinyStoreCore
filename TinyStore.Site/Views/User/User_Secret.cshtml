<q-page padding>
    <q-form class="q-gutter-md">
        <div class="text-h5 text-weight-bold text-grey-8">
            <q-icon :name="userlinks[1].icon" size="md" class="on-left"></q-icon>{{userlinks[1].text}}
        </div>

        <q-separator class="q-my-md"></q-separator>

        <q-input outlined dense stack-label bg-color="white"
                 label="旧密码"
                 v-model="password.old"
                 ref="password_old"
                 :rules="[val => !!val || '必须输入旧密码']">
        </q-input>
        <q-input outlined dense stack-label bg-color="white"
                 label="新密码"
                 v-model="password.new"
                 ref="password_new"
                 :rules="[val => !!val || '必须输入新密码',val => val.length > 5 || '新密码必须大于5位']">
        </q-input>
        <q-input outlined dense stack-label bg-color="white"
                 label="重复新密码"
                 v-model="password.renew"
                 ref="password_renew"
                 :rules="[val => val === password.new || '两次输入的新密码不一致']">
        </q-input>
        
        <q-btn :loading="btnSaveLoading" class="float-right" color="primary" icon="save"  label="保存" @@click="userPasswordModify" ></q-btn>
    </q-form>
</q-page>

@section Scripts{
   <script>
   var _page = {
       data:{
           password:{
               'old':'',
               'new':'',
               'renew':'',
           },
           btnSaveLoading:false
       },
       beforeMount(){
           
       },
       methods: {
           userPasswordModify(){
               this.$refs.password_old.validate();
               this.$refs.password_new.validate();
               this.$refs.password_renew.validate();
               
               if (!this.$refs.password_old.hasError && !this.$refs.password_new.hasError && !this.$refs.password_renew.hasError){
                   this.btnSaveLoading = true;
                   UserApi("UserPasswordModify",{passwordold:this.password.old,passwordnew:this.password.new},true)
                      .then((response)=> {
                          if (response.data.code === 1){                
                              Notify.Info('保存成功');
                          }
                          else if (response.data.code === 11){
                             Notify.Warning('保存失败，旧密码错误');
                          }
                          this.btnSaveLoading = false;
                      })
                      .catch( (error)=> {
                          Notify.Warning('接口通信错误');
                          console.error(error);
                          this.btnSaveLoading = false;
                      });
               }
           }
       }
   };
   DeepMerge(_layout,_page);
   
   new Vue(_layout);
    </script>
}