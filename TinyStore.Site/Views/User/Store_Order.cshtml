<q-page padding>
    <div class="text-h5 text-weight-bold text-grey-8">
        <q-icon :name="storelinks[3].icon" size="md" class="on-left"></q-icon>{{storelinks[3].text}}
    </div>
    <q-separator class="q-my-md"></q-separator>
    <div class="row q-gutter-xs q-mx-none q-my-sm">
        @* <q-select outlined dense options-dense stack-label bg-color="white" style="min-width: 240px" *@
        @*           class="col-xs-12 col-md-auto" *@
        @*           label="商品" *@
        @*           v-model="orderFilter.productCurrent" *@
        @*           :options="productOptions"> *@
        @*     <template v-slot:selected-item="scope"> *@
        @*         {{ scope.opt.name }} *@
        @*         <q-badge outline class="on-right" color="primary" v-if="scope.opt.category"> *@
        @*             {{ scope.opt.category }} *@
        @*         </q-badge> *@
        @*     </template> *@
        @*     <template v-slot:option="scope"> *@
        @*         <q-item *@
        @*             v-bind="scope.itemProps" *@
        @*             v-on="scope.itemEvents"> *@
        @*             <div> *@
        @*                 {{ scope.opt.name }} *@
        @*                 <q-badge outline class="on-right" color="primary" v-if="scope.opt.category"> *@
        @*                     {{ scope.opt.category }} *@
        @*                 </q-badge> *@
        @*             </div> *@
        @*         </q-item> *@
        @*     </template> *@
        @* </q-select> *@
        <q-input outlined dense stack-label bg-color="white" style="min-width: 230px;"
                 readonly
                 class="col-xs-12 col-md-auto"
                 label="订单日期"
                 :value="orderFilter.dateRange ? orderFilter.dateRange.from + ' 至 ' + orderFilter.dateRange.to : '' " 
                 @@clear="v=>orderFilter.dateRange = null">
          <template v-slot:append>
            <q-icon name="event" color="primary" class="cursor-pointer">
                <q-popup-proxy transition-show="scale" transition-hide="scale">
                    <q-date range mask="YYYY-MM-DD"
                            v-model="orderFilter.dateRange" 
                            :options="dateRangeOptionsFn">
                        <div class="row items-center justify-end">
                            <q-btn v-close-popup :label="$q.lang.label.clear" color="warning" flat @@click="orderFilter.dateRange = null" ></q-btn>
                            <q-btn v-close-popup :label="$q.lang.label.close" color="primary" flat ></q-btn>
                        </div>
                    </q-date>
                </q-popup-proxy>
            </q-icon>
          </template>
        </q-input>
        <q-input outlined dense stack-label bg-color="white"
                 clearable
                 class="col-xs-12 col-md-shrink"
                 label="关键词"
                 v-model="orderFilter.keyname">
            <template v-slot:prepend>
                <q-icon name="fas fa-filter" color="primary" size="xs"/>
            </template>
        </q-input>
        <q-toggle class="col-shrink" toggle-indeterminate v-model="orderFilter.isPay" color="orange" :label="orderIsPayOptions[1].name" left-label></q-toggle>
        <q-toggle class="col-shrink" toggle-indeterminate v-model="orderFilter.isDelivery" color="orange" :label="orderIsDeliveryOptions[1].name" left-label></q-toggle>
        <q-space></q-space>
        <q-btn :loading="orderFilter.loading" class="col-shrink" color="primary" icon="search" label="搜索" @@click="loadOrderData"></q-btn>
    </div>

    <div class="row q-gutter-xs q-mx-none q-my-sm">
        <q-btn class="q-mx-xs" color="primary" ><q-icon class="on-left" size="xs" name="pan_tool"></q-icon>手工订单</q-btn>
        @* <q-btn class="q-mx-xs" color="primary" @@click="stockExport"><q-icon class="on-left" size="xs" name="fas fa-file-export"></q-icon>导出</q-btn> *@
        <q-space ></q-space>
        <q-btn-dropdown :disable-main-btn="stockSelected.length === 0" color="warning" label="批量操作">
            <q-list>
                <q-item clickable v-close-popup @@click="stockMultipleAction(0)">
                    <q-item-section>
                        <q-item-label><q-icon class="on-left" size="xs" name="delete_forever"></q-icon>删除</q-item-label>
                    </q-item-section>
                </q-item>

                <q-item clickable v-close-popup @@click="stockMultipleAction(1)">
                    <q-item-section>
                        <q-item-label><q-icon class="on-left" size="xs" :name="stockIsShowOptions[0].icon"></q-icon>{{stockIsShowOptions[0].name}}</q-item-label>
                    </q-item-section>
                </q-item>

                <q-item clickable v-close-popup @@click="stockMultipleAction(2)">
                    <q-item-section>
                        <q-item-label><q-icon class="on-left" size="xs" :name="stockIsShowOptions[1].icon"></q-icon>{{stockIsShowOptions[1].name}}</q-item-label>
                    </q-item-section>
                </q-item>
            </q-list>
        </q-btn-dropdown>
    </div>
    <q-table
        :grid="!$q.platform.is.desktop"

        row-key="stockId"
        :data="stockData"
        :columns="stockColumns"

        selection="multiple"
        :selected.sync="stockSelected"

        :pagination.sync="orderFilter.pagination"
        :rows-per-page-options="[10, 25, 50, 100, 200]"
        @@request="loadOrderData">
        <template v-slot:body="props">
            <q-tr :props="props">
                <q-td>
                    <q-checkbox v-model="props.selected"></q-checkbox>
                </q-td>
                <q-td key="name">
                    <strong>{{ props.row.name }}
                        <q-badge align="top" color="accent" class="text-italic">{{ props.row.quantity }}</q-badge>
                    </strong>
                </q-td>
                <q-td key="amount">
                    <q-icon name="fas fa-yen-sign">{{ props.row.amount }}</q-icon> 
                </q-td>
                <q-td key="contact">
                   {{ props.row.contact }} / {{ props.row.NoticeAccount }}
                </q-td>
                <q-td key="createDate">
                    {{ Quasar.date.formatDate(props.row.createDate,'YYYY-MM-DD HH:mm') }}
                </q-td>
                <q-td auto-width key="state">
                    {{ void (isDeliveryIndex = props.row.isDelivery ? 1 : 0, isPayIndex = props.row.isPay ? 1 : 0) }}
                    <q-icon size="sm" :name="orderIsPayOptions[isPayIndex].icon" :color="orderIsPayOptions[isPayIndex].color">
                        <q-tooltip>
                            {{ orderIsPayOptions[isPayIndex].name }}
                        </q-tooltip>
                    </q-icon>
                    <q-icon size="sm" :name="orderIsDeliveryOptions[isDeliveryIndex].icon" :color="orderIsDeliveryOptions[isDeliveryIndex].color">
                        <q-tooltip>
                            {{ orderIsDeliveryOptions[isDeliveryIndex].name }}
                        </q-tooltip>
                    </q-icon>
                </q-td>
            </q-tr>
        </template>
        <template v-slot:item="props">
            <div class="q-pa-xs col-xs-12 col-sm-6 col-md-4">
                <q-card>
                    <q-item dense>
                        <q-item-section >
                            <q-checkbox dense v-model="props.selected"></q-checkbox>
                        </q-item-section>
                        <q-item-section style="display: inline-block;text-align: right">
                            <q-icon size="sm" :name="props.row.isShow?'play_circle_filled':'pause'" :color="props.row.isShow?'primary':'warning'">
                                <q-tooltip>
                                    {{ props.row.isShow?'上架':'下架' }}
                                </q-tooltip>
                            </q-icon>
                            <q-icon size="sm" :name="props.row.isDelivery?'send':'card_travel'" :color="props.row.isDelivery?'warning':'primary'">
                                <q-tooltip>
                                    {{ props.row.isDelivery?'已售':'在库' }}
                                </q-tooltip>
                            </q-icon>
                        </q-item-section>
                    </q-item>
                    <q-separator></q-separator>
                    <q-card-section class="q-pa-xs">
                        <strong>{{ props.row.name }}<q-badge align="top" color="accent" class="text-italic">{{ props.row.quantity }}</q-badge></strong>
                    </q-card-section>
                </q-card>
            </div>
        </template>
    </q-table>
</q-page>

@* <q-dialog v-model="stockImportDialog"> *@
@*     <q-card class="q-pb-md" style="max-width: 500px; width: 500px;"> *@
@*         <q-card-section class="row items-center q-pb-none"> *@
@*             <div class="text-h6 text-primary on-left"> *@
@*                 {{ orderFilter.productCurrent.name }} *@
@*                 <q-badge outline align="top" color="primary" v-if="orderFilter.productCurrent.category"> *@
@*                     {{ orderFilter.productCurrent.category }} *@
@*                 </q-badge> *@
@*             </div> *@
@*             卡密导入 *@
@*             <q-space ></q-space> *@
@*             <q-btn icon="close" flat round dense v-close-popup></q-btn> *@
@*         </q-card-section> *@
@*         <q-card-section class="q-gutter-sm"> *@
@*             <q-input outlined dense stack-label bg-color="white" *@
@*                      type="textarea" *@
@*                      label="卡密数据" hint="格式： 每行一条卡密信息" *@
@*                      v-model.trim="stockImportContent"> *@
@*             </q-input> *@
@*         </q-card-section> *@
@*         <q-card-section> *@
@*             <q-btn class="float-right" color="warning" icon="edit" label="保存" :disable="stockImportContent.length === 0" @@click="stockImport"></q-btn> *@
@*             <q-toggle class="float-right" v-model="stockImportIsShow" color="orange" :label="stockIsShowOptions[1].name" left-label></q-toggle> *@
@*             <q-toggle class="float-right" v-model="stockImportIsAllowRepeat" color="primary" label="允许重复" left-label></q-toggle> *@
@*         </q-card-section> *@
@*     </q-card> *@
@* </q-dialog> *@

@section Scripts{

    <script>
   var _page = {
       data:{
           orderFilter:{
               loading:false,
               keyname:'',
               isPay:null,
               isDelivery:null,
               dateRange:null,
               productData:[],
               productCurrent:{productId:''},
               pagination:{                   
                   page: 1,
                   rowsPerPage: 25,
                   rowsNumber:0,
               },
           },
           stockData:[],
           stockColumns:[
               {
                   align: 'left',
                   name:'name',
                   label:'商品名称',
               },
               {
                   align: 'left',
                   name:'amount',
                   label:'金额',
               },
               {
                   align: 'left',
                   name:'contact',
                   label:'客户资料',
               },
               {
                   align: 'left',
                   name:'createDate',
                   label:'订单日期',
               },
               {
                   align: 'left',
                   // format: (val, row) => `${row.isShow}`,
                   name:'state',
                   label:'状态'
               },
           ],
           stockSelected:[],
           stockImportDialog:false,
           stockImportContent:'',
           stockImportIsShow:true,
           stockImportIsAllowRepeat:false,
       },
       beforeMount(){
           // UserApi('ProductList',{ storeId:this.storeCurrent.storeId },true)
           //    .then((response)=> {
           //        if (response.data.code === 1){ 
           //            this.orderFilter.productData = response.data.data;
           //            this.orderFilterReset();
           //            this.loadOrderData();
           //        } else{
           //            Notify.Warning('商品数据加载失败');
           //        }
           //    })
           //    .catch( (error)=> {
           //        Notify.Warning('接口通信错误');
           //        console.error(error);
           //    });
           this.loadOrderData();
       },
       computed:{
           productOptions(){
               var data = [];
               data.push({productId:'',name:'全部*'});
               for (i in this.orderFilter.productData){
                   data.push(this.orderFilter.productData[i]);
               }
               return data;
           }
       },
       methods: {
           loadOrderData(){
               if(arguments.length>0 && arguments[0].pagination){
                   this.orderFilter.pagination = arguments[0].pagination;
               }
               this.orderFilter.loading =true;
               UserApi('OrderPageList',{ storeId:this.storeCurrent.storeId, productId:this.orderFilter.productCurrent.productId,keyname:this.orderFilter.keyname, pageSize:this.orderFilter.pagination.rowsPerPage,pageIndex:this.orderFilter.pagination.page,isPay:this.orderFilter.isPay,isDelivery:this.orderFilter.isDelivery},true)
                  .then((response)=> {
                      if (response.data.code === 1){ 
                          this.stockData = response.data.data.rows;
                          this.orderFilter.pagination.rowsNumber = response.data.data.total;   
                          this.stockSelected = [];
                      } else{
                          Notify.Warning('订单数据加载失败');
                      }
                      this.orderFilter.loading =false;
                  })
                  .catch( (error)=> {
                      this.orderFilter.loading =false;
                      Notify.Warning('接口通信错误');
                      console.error(error);
                  });
           },
           orderFilterReset(){
               this.orderFilter.keyname='';
               this.orderFilter.isShow=null;
               this.orderFilter.productCurrent=this.productOptions[0];
               this.orderFilter.pagination.page =1;
               this.orderFilter.pagination.rowsPerPage =25;
           },
           stockMultipleAction(action){
               var stockIds = _.map(this.stockSelected, 'stockId');
               this.orderFilter.loading =true;
               UserApi('StockMultipleAction',{ stockIds:JSON.stringify(stockIds), action},true)
               .then((response)=> {
                     if (response.data.code === 1){ 
                         this.loadOrderData();
                     } else{
                         Notify.Warning('操作执行失败');
                     }
                     this.orderFilter.loading =false;
                 })
                 .catch( (error)=> {
                     this.orderFilter.loading =false;
                     Notify.Warning('接口通信错误');
                     console.error(error);
                 });
           },
           dateRangeOptionsFn(date){
               var date_end = Quasar.date.formatDate(Date.now(),'YYYY/MM/DD');
               var date_start = Quasar.date.formatDate(Quasar.date.addToDate(Date.now(),{month:-3}),'YYYY/MM/DD');
               //console.log(date_start,date_end);
               return date >= date_start && date <= date_end;
           }
       }
   };
   DeepMerge(_layout,_page);
   new Vue(_layout);
    </script>
}