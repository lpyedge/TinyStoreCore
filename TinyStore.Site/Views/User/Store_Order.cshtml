<div class="order">
    <h4 class="mb-3  bd-text-purple-bright">
        @if (ViewBag.Supplier == null)
        {
            <span>订单记录</span>
        }
        else
        {
            <span>
                @ViewBag.Supplier.Name 未结算订单
            </span>
        }
    </h4>
    <div class="form-inline">
        @if (ViewBag.Supplier == null)
        {
            <select class="form-control mr-1" id="slTime">
                @foreach (TinyStore.EOrderTimeType item in Enum.GetValues(typeof(TinyStore.EOrderTimeType)))
                {
                    <option value="@((int)item)">@item</option>
                }
            </select>
            <label class="ml-2">起始时间</label>
            <div class="input-group ml-1">
                <input id="txtDateBegin" type="date" class="form-control" value="@DateTime.Now.AddDays(-7).ToString(SiteContext.Config.FormatDate)" />
            </div>
            <label class="ml-2">结束时间</label>
            <div class="input-group ml-1">
                <input id="txtDateEnd" type="date" class="form-control" value="@DateTime.Now.ToString(SiteContext.Config.FormatDate)" />
            </div>
        }
        <div class="input-group ml-2 form-check">
            <input id="chkIsHasReturn" type="checkbox" class="" /><label for="chkIsHasReturn">有退款</label>
        </div>
    </div>
    <div class="form-inline row">
        <div class="col-12 col-md-3 mt-2">
            <select class="form-control" id="slState">
                <option value="0">请选择订单状态</option>
                @foreach (TinyStore.EState state in Enum.GetValues(typeof(TinyStore.EState)))
                {
                    if (ViewBag.Supplier == null)
                    {
                        <option value="@((int)state)">@state</option>
                    }
                    else if (state != EState.客户下单)
                    {
                        <option value="@((int)state)">@state</option>
                    }
                }
            </select>
        </div>
        <div class="col-12 col-md-2 mt-2">
            <select class="form-control" id="slKey">
                @foreach (TinyStore.EOrderSearchKey key in Enum.GetValues(typeof(TinyStore.EOrderSearchKey)))
                {
                    <option value="@((int)key)">@key</option>

                }
            </select>
        </div>
        <div class="col-12 col-md-3 mt-2 mr-1">
            <input type="text" class="form-control" id="txtKey" />
        </div>
        @*<div class="input-group ml-2 form-check">
            <input id="chkIsHasDueAlert" type="checkbox" />
            <label for="chkIsHasDueAlert"> 到期未处理</label>
        </div>*@
    </div>
    <div class="form-inline mt-2">
        <button class="btn btn-warning mr-1" id="btnSearch">搜索</button>
        @if (ViewBag.Product != null)
        {
            <button class="btn btn-success mr-1" id="btnAddOrder">添加</button>
        }
        <button class="btn btn-danger mr-1" id="btnClose">批量结算</button>
        @*<button class="btn btn-info mr-1" id="btnUpdateRemark">批量修改订单备注</button>
            <button class="btn btn-success mr-1" id="btnUpdateDueDate">批量修改到期时间</button>*@
        <button class="btn btn-primary mr-1" id="btnUpdateIsDueAlert">批量已处理</button>
        <button class="btn btn-warning mr-1" id="btnUpdateIsDueAlertNo">批量未处理</button>
    </div>
    <table id="grid" class="table table-striped table-bordered" cellspacing="0" width="100%">
    </table>
    <div class="form-inline mt-2">
        <div class="col-4 col-md-2 mb-2">
            <label>总收入</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtIncome" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
        <div class="col-4 col-md-2 mb-2">
            <label>总退款</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtReturnAmount" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
    </div>
    <div class="form-inline">
        <div class="col-4 col-md-2 mb-2">
            <label>总支出</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtCost" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
        <div class="col-4 col-md-2 mb-2">
            <label>未结算</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtCostNoClose" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
    </div>
    <div class="form-inline">
        <div class="col-4 col-md-2 mb-2">
            <label>总手续费</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtPaymentFee" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
        <div class="col-4 col-md-2 mb-2">
            <label>退款返还</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtPaymentFeeReturn" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
    </div>
    <div class="form-inline">
        <div class="col-4 col-md-2 mb-2">
            <label>毛利润</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtProfitGross" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
        <div class="col-4 col-md-2 mb-2">
            <label>纯利润</label>
        </div>
        <div class="col-8 col-md-4 mb-2">
            <div class="input-group ">
                <input id="txtProfit" type="text" class="form-control" readonly="readonly" />
            </div>
        </div>
    </div>
</div>

@*<div id="dialogRemark" style="display:none">
    <div class="form-group form-inline row ">
        <label class="col-lg-3 control-label">订单备注</label>
        <div class="col-8">
            <textarea class="form-control w-100" rows="7">
             </textarea>
        </div>
    </div>
</div>*@
<div id="dialog">
    <form>
        <div class="jumbotron">
            <div class="form-group form-inline row ">
                <h6 class="col-12 control-label bd-text-purple-bright">订单相关</h6>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">订单号</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="OrderId" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">订单状态</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="State_str" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">下单数量</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Quantity" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">支付方式</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="PaymentType_str" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">进货成本</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Cost" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row Discount">
                <label class="col-lg-3 control-label">订单金额</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="OrderAmount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row IsDiscount">
                <label class="col-lg-3 control-label">优惠金额</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Discount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">联系方式</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Contact" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row NoticeAccount">
                <label class="col-lg-3 control-label">通知账户</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="NoticeAccount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row IsPay">
                <label class="col-lg-3 control-label">交易编号</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="TranId" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">下单时间</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="CreateDate_str" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">最后变动</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="LastUpdateDate_str" readonly="readonly" />
                </div>
            </div>
        </div>
        <div class="jumbotron">
            <div class="form-group form-inline row">
                <h6 class="col-12 control-label bd-text-purple-bright">产品相关</h6>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">商品名称</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Name" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row IsDiscount">
                <label class="col-lg-3 control-label">商品原价</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="ProductAmountO" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">商品单价</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="ProductAmount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row IsDiscount">
                <label class="col-lg-3 control-label">折扣说明</label>
                <div class="col-8">
                    <textarea name="DiscountInfo" class="form-control" rows="3" readonly="readonly"></textarea>
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">商品简介</label>
                <div class="col-8">
                    <textarea name="Memo" class="form-control" rows="3" readonly="readonly"></textarea>
                </div>
            </div>
        </div>
        <div class="jumbotron IsDelivery">
            <div class="form-group form-inline row">
                <h6 class="col-12 control-label bd-text-purple-bright">发货相关</h6>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">发货时间</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="DeliveryDate_str" readonly="readonly" />
                </div>
            </div>
        </div>
        <div class="jumbotron IsReturn">
            <div class="form-group form-inline row">
                <h6 class="col-12 control-label bd-text-purple-bright">退款相关</h6>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label ReturnAmount">退款金额</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="ReturnAmount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">退款时间</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="ReturnDate_str" readonly="readonly" />
                </div>
            </div>
        </div>
        <div class="jumbotron IsClose">
            <div class="form-group form-inline row">
                <h6 class="col-12 control-label bd-text-purple-bright">结算相关</h6>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">结算时间</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="DeliveryDate_str" readonly="readonly" />
                </div>
            </div>
        </div>
    </form>
</div>
@if (ViewBag.Product != null)
{
    <div id="dialogAdd">
        <form>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">商品名称</label>
                <div class="col-8">
                    <input type="text" class="form-control" value="@ViewBag.Product.Name" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">商品单价</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Price" value="@ViewBag.Product.Amount" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">下单数量</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Quantity" value="@ViewBag.Product.QuantityMin" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">订单金额</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Amount" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row sys_paymentlist">
                <label class="col-lg-3 control-label">支付方式</label>
                <div class="col-8">
                    @foreach (TinyStore.EPaymentType key in Enum.GetValues(typeof(TinyStore.EPaymentType)))
                    {
                        <label>
                            <input type="radio" name="PaymentType" value="@((int)key)" />@key
                        </label>
                    }
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">联系方式</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="Contact" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">通知账户</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="NoticeAccount" />
                </div>
            </div>
            <div class="form-group form-inline row">
                <label class="col-lg-3 control-label">是否付款</label>
                <div class="col-8">
                    <input type="checkbox" name="IsPay" checked="checked" />
                </div>
            </div>
            <div class="form-group form-inline row IsPay">
                <label class="col-lg-3 control-label">是否已发货</label>
                <div class="col-8">
                    <input name="IsDelivery" type="checkbox" />
                </div>
            </div>
            <div class="form-group form-inline row IsPay">
                <label class="col-lg-3 control-label">交易编号</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="TranId" />
                </div>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">添加时间</label>
                <div class="col-8">
                    <input name="CreateDate" type="date" class="form-control" value="@DateTime.Now.ToString(SiteContext.Config.FormatDate)" />
                </div>
            </div>
        </form>
    </div>
}
<div id="dialogReturn">
    <form>
        <div class="form-group form-inline row">
            <label class="col-lg-3 control-label">实收金额</label>
            <div class="col-8">
                <input type="number" class="form-control" name="Income" readonly="readonly" />
            </div>
        </div>
        <div class="form-group form-inline row">
            <label class="col-lg-3 control-label">支出成本</label>
            <div class="col-8">
                <input type="number" class="form-control" name="Cost" step="0.01" min="0" />
            </div>
        </div>
        <div class="form-group form-inline row">
            <label class="col-lg-3 control-label">退款金额</label>
            <div class="col-8">
                <input type="number" class="form-control" name="ReturnAmount" step="0.01" , min="0" />
            </div>
        </div>
        <div class="form-group form-inline row">
            <label class="col-lg-3 control-label">毛利润</label>
            <div class="col-8">
                <input type="number" class="form-control" name="ProfitGross" readonly="readonly" />
            </div>
        </div>
    </form>
</div>
<div id="dialogCard">
    <form>
        <div class="jumbotron">
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">卡号</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="CardName" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">密码</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="CardPassword" readonly="readonly" />
                </div>
            </div>
        </div>
        <div class="jumbotron">
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">卡号</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="CardName" readonly="readonly" />
                </div>
            </div>
            <div class="form-group form-inline row ">
                <label class="col-lg-3 control-label">密码</label>
                <div class="col-8">
                    <input type="text" class="form-control" name="CardPassword" readonly="readonly" />
                </div>
            </div>
        </div>
    </form>
</div>
@section Scripts{
    <script>
        var dialog;
        var list = null;
        var product = @Json.Serialize(ViewBag.Product);
        var supplier = @Json.Serialize(ViewBag.Supplier);

        $(function () {
            $("#dialog").hide();
            $("#dialogReturn").hide();
            $("#dialogCard").hide();
            $("#btnSearch").on("click", QueryPageList);
            $("#btnClose").on("click", function () {
                var ids = new Array();
                $.each(grid.bootstrapTable("getSelections"), function (index, item) {
                    ids.push(item.OrderId);
                })
                if (ids.length == 0) {
                    $.toast("请选择所要操作的项目！");
                }
                else {
                    bootbox.confirm("是否确认?", function (result) {
                        if (result) {
                            CY.Ajax("OrderUpdateIsSettle", {
                                Token: Store.Token()
                            }, {
                                "storeid": storeid,
                                "orderids": JSON.stringify(ids)
                            }, function (msg) {
                                if (msg.Result) {
                                    $.toast("操作成功！");
                                } else {
                                    $.toast(msg.Message);
                                }
                                QueryPageList();
                            });
                        }
                    });
                }
                return false;
            });
            $("#dialogAdd").hide();
            if (product) {
                $("#btnAddOrder").on("click", OrderInsertShow);
                OrderInsertShow();
            }
            QueryPageList();
        });

        var grid = $('#grid').bootstrapTable(
            $.extend(baseTableoption, {
                uniqueId: "OrderId",
                columns: [
                    { checkbox: true },
                    {
                        title: '订单编号',
                        events: {
                            "click [name='shortlink']": function (e, value, row, index) {
                                UrlShortShow(row.OrderId);
                            }
                        },
                        formatter: function (value, row, index) {
                            return row.OrderId
                                + "<br/>" + row.Name;
                        }
                    }, {
                        title: '订单款项', formatter: function (value, row, index) {
                            var html = "";
                            if (row.IsPay) {
                                if (row.IsSettle)
                                    html += "<label class='badge badge-success' title='已结算'><i class=\"fa fa-check\"></i></label>";
                                else
                                    html += "<label class='badge badge-danger' title='未结算'><i class=\"fa fa-times\"></i></label>";
                                var title = "收款";
                                if (row.ReturnAmount > 0)
                                    title += "-退款";
                                if (row.CostFee == 0)
                                    title += "-成本";
                                else
                                    title += "-(成本+手续费)";
                                title += "=毛利润";
                                html += "<a class='btn btn-outline-success ml-1' style='min-width:7rem;' title='" + title + "' href='#'>";
                                html += row.Income.Format0(2);
                                var profitGross = row.Income;
                                if (row.ReturnAmount > 0) {
                                    html += " - " + row.ReturnAmount.Format0(2);
                                    profitGross -= row.ReturnAmount;
                                }
                                if (row.CostFee == 0) {
                                    html += " - " + row.Cost.Format0(2);
                                    profitGross -= row.Cost;
                                }
                                else {
                                    html += " - (" + row.Cost.Format0(2) + " + " + row.CostFee.Format0(2) + ") ";
                                    profitGross -= (row.Cost + row.CostFee);
                                }
                                html += " = " + profitGross.Format0(2);
                                html += "</a>";
                            } else {
                                html += "<label class='badge badge-danger' title='未付款'>未付款</label>";
                            }
                            return html;
                        }
                    }, {
                        title: '状态', formatter: function (value, row, index) {
                            return "<label class='badge badge-success'>" + GetEnumName("slState", row.State) + "</label>";;
                        }
                    }, {
                        title: '支付方式', formatter: function (value, row, index) {
                            if (row.PaymentType == 3)
                                return "<label class='badge badge-info'>支 PC</label>";
                            //else if (row.PaymentType == "微信扫码支付")
                            else if (row.PaymentType == 2)
                                return "<label class='badge badge-success'><i class='fa fa-weixin'></i> PR</label>";
                            //else if (row.PaymentType == "银行付款")
                            //    return "<label class='badge badge-warning'><i class=\"fa fa-credit-card\"></i></label>";
                            //else if (row.PaymentType == "支付宝扫码支付")
                            else if (row.PaymentType == 1)
                                return "<label class='badge badge-info'>支 PR</label>";
                            else if (row.PaymentType == 4)
                                return "<label class='badge badge-success'><i class='fa fa-weixin'></i> H5</label>";
                            //else if (row.PaymentType == "微信公众号支付")
                            //    return "<label class='badge badge-success'><i class='fa fa-weixin'></i> 公众号</label>";
                            else if (row.PaymentType == 5)
                                return "<label class='badge badge-info'>支 Wap</label>";
                            return "";
                        }
                    }, {
                        title: '最终变动时间', formatter: function (value, row, index) {
                            return DatetimeFormat(row.LastUpdateDate)
                        }
                    }, {
                        title: '订单管理', formatter: function (value, row, index) {
                            var btn = "";
                            if (row.IsPay) {
                                if (row.ReturnAmount < row.Income) {
                                    if (!row.IsDelivery) {
                                        btn += "<button onclick=\"Delivery('" + row.OrderId + "')\" class=\"btn-info btn-sm m-1\">发货</button>";
                                    }
                                    btn += "<button onclick=\"ReturnShow('" + row.OrderId + "')\" class=\"btn-danger btn-sm m-1\">退款</button>";
                                }
                                if (row.IsDelivery && row.StockJson.length > 2) {
                                    btn += "<button onclick=\"SeeCard('" + row.OrderId + "')\" class=\"btn-primary btn-sm m-1\">卡密</button>";
                                }
                            }
                            //if (!row.IsDeleteApply)
                            //    btn += "<button onclick=\"DeleteApply('" + row.OrderId + "')\" class=\"btn-warning btn-sm m-1\">删除</button>";
                            if (row.IsDelivery)
                                btn += "<button onclick=\"Email('" + row.OrderId + "')\" class=\"btn-success btn-sm m-1\">手动发信</button>";
                            //if (row.Remark != "")
                            //    btn += "<button onclick=\"RemarkShow('" + row.OrderId + "')\" class=\"btn-info btn-sm m-1\">备注查看</button>";
                            return btn;
                        }
                    }]
            })
        );
        function CreateGid(msg) {
            grid.bootstrapTable('load', msg.Data);
            $("#txtIncome").val("￥" + msg.Data.footer.Income.Format0(2));
            $("#txtReturnAmount").val("￥" + msg.Data.footer.ReturnAmount.Format0(2));
            $("#txtCost").val("￥" + msg.Data.footer.Cost.Format0(2));
            $("#txtCostNoClose").val("￥" + msg.Data.footer.CostNoClose.Format0(2));
            $("#txtPaymentFee").val("￥" + msg.Data.footer.PaymentFee.Format0(2));
            $("#txtPaymentFeeReturn").val("￥" + msg.Data.footer.PaymentFeeReturn.Format0(2));
            $("#txtProfitGross").val("￥" + msg.Data.footer.ProfitGross.Format0(2));
            $("#txtProfit").val("￥" + msg.Data.footer.Profit.Format0(2));
            list = msg.Data.rows;
            var rule_tel = /^1[3,5,7,8]\d{9}$/g;
            $.each(list, function (index, order) {
                //if (rule_tel.test(order.Contact))
                //    order.Contact += "(电话)";
                //else
                //    order.Contact += "(QQ)";
                if (order.NoticeAccount != "") {
                    if (rule_tel.test(order.NoticeAccount))
                        order.NoticeAccount += "(电话)";
                    else
                        order.NoticeAccount += "(邮箱)";
                }
                order.Cost = order.Cost.Format0(2);
                order.ProductAmount = (order.Amount / order.Quantity).Format0(2);
                order.ReturnAmount = order.ReturnAmount.Format0(2);
            });
        }
        function QueryPageList() {
            var gridopt = grid.bootstrapTable("getOptions");
            if (!supplier) {
                CY.Ajax("OrderPageList", {
                    Token: Store.Token()
                }, {
                    storeid: storeid,
                    begin: $("#txtDateBegin").val(),
                    end: $("#txtDateEnd").val(),
                    state: $("#slState").val(),
                    keykind: $("#slKey").val(),
                    key: $("#txtKey").val(),
                    ishasreturn: $("#chkIsHasReturn").prop("checked"),
                    ishasduealert: $("#chkIsHasDueAlert").prop("checked"),
                    timetype: $("#slTime").val(),
                    pageindex: gridopt.pageNumber,
                    pagesize: gridopt.pageSize
                }, function (msg) {
                    CreateGid(msg);
                });
            } else {
                CY.Ajax("OrderPageListBySid", {
                    Token: Store.Token()
                }, {
                    storeid: storeid,
                    sid: supplier.SId,
                    state: $("#slState").val(),
                    keykind: $("#slKey").val(),
                    key: $("#txtKey").val(),
                    ishasreturn: $("#chkIsHasReturn").prop("checked"),
                    ishasduealert: $("#chkIsHasDueAlert").prop("checked"),
                    pageindex: gridopt.pageNumber,
                    pagesize: gridopt.pageSize
                }, function (msg) {
                    CreateGid(msg);
                });
            }
        }

        function GetOrderModel(m_id) {
            var order = null;
            for (var i = 0; i < list.length; i++) {
                if (list[i].OrderId == m_id) {
                    order = list[i];
                    i = list.length;
                }
            }
            return order;
        }
        function OrderInfo(m_id) {
            var order = GetOrderModel(m_id);
            dialog = bootbox.dialog({
                show: false,
                title: "订单明细",
                message: $("#dialog").html()
            });
            if (order.NoticeAccount == "")
                dialog.find("form").find(".NoticeAccount").hide();
            else
                dialog.find("form").find(".NoticeAccount").show();
            if (order.IsPay)
                dialog.find("form").find(".IsPay").show();
            else
                dialog.find("form").find(".IsPay").hide();
            if (order.IsDelivery)
                dialog.find("form").find(".IsDelivery").show();
            else
                dialog.find("form").find(".IsDelivery").hide();
            if (order.IsSettle)
                dialog.find("form").find(".IsClose").show();
            else
                dialog.find("form").find(".IsClose").hide();
            if (order.ReturnAmount > 0)
                dialog.find("form").find(".IsReturn").show();
            else
                dialog.find("form").find(".IsReturn").hide();
            dialog.find("form").FormSet(order);
            dialog.find("form").find("[name='OrderAmount']").val("￥" + (order.Amount + order.Discount));
            dialog.find("form").find("[name='Discount']").val("￥" + order.Discount);
            if (order.Discount > 0)
                dialog.find("form").find(".IsDiscount").show();
            else
                dialog.find("form").find(".IsDiscount").hide();
            dialog.find("form").find("[name='ProductAmountO']").val("￥" + ((order.Amount + order.Discount) / order.Quantity).Format0(2));
            //if (order.PromoCode != null) {
            //    dialog.find("form").find("[name='DiscountInfo']").val(order.PromoCode.Info + ", 你下单数量为" + order.Quantity + ", 因此产品现价为" + order.ProductAmount);
            //}
            dialog.modal("show");
        }
        function SeeCard(m_id) {
            var order = GetOrderModel(m_id);
            dialog = bootbox.dialog({
                show: false,
                title: "查看卡密",
                message: $("#dialogCard").html()
            });
            var stocklist = JSON.parse(order.StockJson);
            //dialog.find("form").render(stocklist);
            var div = "";
            for (var i = 0; i < stocklist.length; i++) {
                div += '<div class="jumbotron"><div class="form-group form-inline row"><label class="col-lg-3 control-label">卡号</label><div class="col-8"><input type="text" class="form-control" value="' +
                    stocklist[i].CardName+'" readonly="readonly" /></div></div><div class="form-group form-inline row "><label class="col-lg-3 control-label">密码</label><div class="col-8"><input type="text" class="form-control" value="' +
                    stocklist[i].CardPassword+'" readonly="readonly" /></div></div></div>'
            }
            dialog.find("form").html(div);
            dialog.modal("show");
        }
        function Delivery(m_id) {
            bootbox.confirm("是否确认?", function (result) {
                if (result) {
                    CY.Ajax("OrderDelivery", {
                        Token: Store.Token()
                    }, {
                        "storeid": storeid,
                        "orderid": m_id
                    }, function (msg) {
                        if (msg.Result) {
                            $.toast("操作成功！");
                        } else {
                            $.toast(msg.Message);
                        }
                        QueryPageList();
                    });
                }
            });
            return false;
        }

        function Email(m_id) {
            bootbox.confirm("是否确认?", function (result) {
                if (result) {
                    CY.Ajax("OrderEmail", {
                        Token: Store.Token()
                    }, {
                        "storeid": storeid,
                        "orderid": m_id
                    }, function (msg) {
                        if (msg.Result) {
                            $.toast("操作成功！");
                        } else {
                            $.toast(msg.Message);
                        }
                        QueryPageList();
                    });
                }
            });
            return false;
        }
        function ReturnShow(m_id) {
            var order = GetOrderModel(m_id);
            dialog = bootbox.dialog({
                show: false,
                title: "订单退款申请",
                message: $("#dialogReturn").html(),
                buttons: {
                    confirm: {
                        label: "保存",
                        className: "btn-success",
                        callback: function () {
                            if (dialog.find("form").valid()) {
                                CY.Ajax("OrderReturn", {
                                    Token: Store.Token()
                                }, {
                                    "storeid": storeid,
                                    "orderid": m_id,
                                    "costupdate": dialog.find("form").find("[name='Cost']").val(),
                                    "returnamount": dialog.find("form").find("[name='ReturnAmount']").val()
                                }, function (msg) {
                                    if (msg.Result) {
                                        $.toast("操作成功！");
                                    } else {
                                        $.toast(msg.Message);
                                    }
                                    dialog.modal("hide");
                                    QueryPageList();
                                });
                            }
                            return false;
                        }
                    }
                }
            });
            dialog.find("form").validate_popover({
                
                rules: {
                    ReturnAmount: {
                        required: true
                    }
                }
            });
            dialog.find("form").FormSet(order);
            dialog.find("form").find("[name='ReturnAmount']").on("keyup blur", function () {
                var returnamount = dialog.find("form").find("[name='ReturnAmount']").val().ParseFloat();
                var cost = dialog.find("form").find("[name='Cost']").val().ParseFloat();
                dialog.find("form").find("[name='ProfitGross']").val((order.Income - returnamount - cost).Format0(2));
            });
            dialog.find("form").find("[name='Cost']").on("keyup blur", function () {
                var returnamount = dialog.find("form").find("[name='ReturnAmount']").val().ParseFloat();
                var cost = dialog.find("form").find("[name='Cost']").val().ParseFloat();
                dialog.find("form").find("[name='ProfitGross']").val((order.Income - returnamount - cost).Format0(2));
            });
            dialog.modal("show");
        }

        function OrderInsertShow() {
            dialog = bootbox.dialog({
                show: false,
                title: "订单手动添加",
                message: $("#dialogAdd").html(),
                buttons: {
                    confirm: {
                        label: "保存",
                        className: "btn-success",
                        callback: function () {
                            if (dialog.find("form").valid()) {
                                var order = dialog.find("form").FormGet();
                                order.ProductId = product.ProductId;
                                if (order.IsPay && order.TranId == "")
                                    $.toast("请填写交易编号！");
                                else if (order.Quantity < product.QuantityMin)
                                    $.toast("下单数量不能小于最小下单量！");
                                else {
                                    CY.Ajax("OrderInsert", {
                                        Token: Store.Token()
                                    }, {
                                        "storeid": storeid,
                                        "order": JSON.stringify(order)
                                    }, function (msg) {
                                        if (msg.Result) {
                                            QueryPageList();
                                            $.toast("操作成功！");
                                        } else {
                                            $.toast(msg.Message);
                                        }
                                        dialog.modal("hide");
                                    });
                                }
                            }
                            return false;
                        }
                    }
                }
            });
            dialog.modal("show");
            OrderAmountShow();
            dialog.find("form").validate_popover({
                
                rules: {
                    ReturnAmount: {
                        required: true
                    }
                }
            });
            dialog.find("form").find(".sys_paymentlist").find(":input").first().click();
            dialog.find("form").find("[name='IsPay']").on("click", function () {
                if (dialog.find("form").find("[name='IsPay']").prop("checked")) {
                    dialog.find(".IsPay").show();
                } else {
                    dialog.find(".IsPay").hide();
                }
            });
            dialog.find("form").find("[name='Price']").on("change keyup blur", function () {
                OrderAmountShow();
            });
            dialog.find("form").find("[name='Quantity']").on("change keyup blur", function () {
                OrderAmountShow();
            });
        }
        function OrderAmountShow() {
            var price = dialog.find("form").find("[name='Price']").val().ParseFloat();
            var quantity = dialog.find("form").find("[name='Quantity']").val().ParseInt();
            dialog.find("form").find("[name='Amount']").val((price * quantity).Format0(2));
        }

    </script>
}
