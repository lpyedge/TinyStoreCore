<q-page padding>
    <div class="text-h5 text-weight-bold text-grey-8">
        <q-icon :name="storelinks[0].icon" size="md" class="on-left"></q-icon>{{storelinks[0].text}}
    </div>

    <q-separator class="q-my-sm"></q-separator>

    <q-form class="q-gutter-md q-mt-none">
        <div class="row">
            <div class="col column on-left">
                <q-input outlined dense stack-label bg-color="white"
                         class="col"
                         label="店铺名称"
                         v-model.trim="storeCurrent.name"
                         ref="store_name"
                         :rules="[val => !!val || '必须输入店铺名称',val => val.length < 10 || '店铺名称长度必须小于10']">
                </q-input>
                <q-input outlined dense stack-label bg-color="white"
                         class="col"
                         label="店铺标识"
                         v-model.trim="storeCurrent.uniqueId"
                         hint="设置后不要轻易修改，会影响客户打开时的网址"
                         ref="store_uniqueId"
                         :rules="[val => !!val || '必须输入店铺标识',val => val.length > 5 || '店铺标识长度必须大于5']">
                </q-input>
                <q-select outlined dense options-dense stack-label bg-color="white"
                          class="col"
                          label="店铺模版"
                          v-model="storeCurrent.template"
                          emit-value
                          map-options
                          :options="storeTemplates">
                </q-select>
            </div>
            <div class="col on-right">
                <q-img basic style="border:1px solid grey;border-radius: 0.8rem; height: 10rem; width: 10rem"
                       class="cursor-pointer"
                       :src="storeCurrent.logo"
                       spinner-color="white"
                       @@click="$refs.store_logo_pick.click()">

                    <q-icon class="absolute-top-right" color="orange-9" name="backup" size="sm"></q-icon>
                    @* <template v-slot:loading> *@
                    @*     <div class="text-subtitle1 text-white"> *@
                    @*         Loading... *@
                    @*     </div> *@
                    @* </template> *@
                    <template v-slot:error>
                        <div class="absolute-full flex flex-center bg-grey-2 text-primary">
                            暂无图片
                            <q-icon class="absolute-top-right" color="orange-9" name="backup" size="sm"></q-icon>
                        </div>
                    </template>
                </q-img>
                <input class="hidden" type="file" accept="image/*" ref="store_logo_pick" @@change="storeLogoUpload">
            </div>
        </div>
     
        <q-input outlined dense stack-label bg-color="white"
                 label="联系邮箱"
                 v-model.trim="storeCurrent.email"
                 placeholder="@@">
        </q-input>
        <q-input outlined dense stack-label bg-color="white"
                 label="联系电话"
                 v-model.trim="storeCurrent.telPhone">
        </q-input>
        <q-input outlined dense stack-label bg-color="white"
                 label="联系QQ"
                 v-model.trim="storeCurrent.qq"
                 maxlength="16">
        </q-input>  
        @* <q-input outlined dense stack-label bg-color="white" *@
        @*            label="店铺介绍" *@
        @*            v-model.trim="storeCurrent.memo" *@
        @*            maxlength="4000" *@
        @*            autogrow> *@
        @*   </q-input> *@
        <q-editor v-model="storeCurrent.memo" min-height="5rem" dense
                  placeholder="店铺介绍" 
                  :toolbar="editorToolbar"
                  :fonts="editorFonts"
                  >
        </q-editor>
        <q-btn :loading="btnSaveLoading" class="float-right" color="primary" icon="save" label="保存" @@click="storeSave"></q-btn>
    </q-form>
</q-page>

@section Scripts{
    <script>
   var _page = {
       data:{
          storeTemplates: @Json.Serialize(Global.EnumsOptions<EStoreTemplate>()),
          btnSaveLoading:false
       },
       beforeMount(){
           
       },
       methods: {
           storeSave(){
               if (this.storeCurrent.memo.length > 4000){
                   Notify.Warning('店铺介绍内容过长');
                   return;
               }
               this.$refs.store_name.validate();
               this.$refs.store_uniqueId.validate();
               
               if (!this.$refs.store_name.hasError && !this.$refs.store_uniqueId.hasError){
                   this.btnSaveLoading = true;
                   UserApi("StoreSave", this.storeCurrent)
                      .then((response)=> {
                          if (response.data.code === 1){ 
                              Store.StoreList(response.data.data);
                              Notify.Info('保存成功');
                          }
                          else if (response.data.code === 12){
                             Notify.Warning('保存失败，店铺标识已被占用');
                          } else{
                              Notify.Warning('保存失败，数据格式错误');
                          }
                          this.btnSaveLoading = false;
                      })
                      .catch( (error)=> {
                          Notify.Warning('接口通信错误');
                          console.error(error);
                          this.btnSaveLoading = false;
                      });
               }
           },
           storeLogoUpload(){
               if (arguments.length === 1 && arguments[0].target && arguments[0].target.files && arguments[0].target.files.length === 1){                   
                    var file = arguments[0].target.files[0];
                    
                    UserApi("UploadFormFile",{model:'Store',id:this.storeCurrent.storeId,name:'Logo', file},true)
                        .then((response)=> {
                              if (response.data.code === 1){                
                                  this.storeCurrent.logo = response.data.data;
                              }
                              else if(response.data.code === 0){
                               Notify.Warning('未上传任何文件');
                            }else if(response.data.code === 15){
                               Notify.Warning('上传参数错误');
                            }else {
                               Notify.Warning('未知错误');
                            }
                            this.$refs.store_logo_pick.value = '';
                          })
                          .catch( (error)=> {
                              Notify.Warning('接口通信错误');
                              console.error(error);
                            this.$refs.store_logo_pick.value = '';
                          });
               }
           }
       }
   };
   DeepMerge(_layout,_page);
   new Vue(_layout);
    </script>
}