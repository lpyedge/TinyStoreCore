<q-page padding>
    <div class="text-h5 text-weight-bold text-grey-8">
        <q-icon :name="supplylinks[1].icon" size="md" class="on-left"></q-icon>{{supplylinks[1].text}}
    </div>
    <q-separator class="q-my-md"></q-separator>
    <div class="row q-gutter-xs q-mx-none q-my-md">
        <q-select outlined dense options-dense stack-label bg-color="white"
                  style="min-width: 10rem"
                  class="col-xs-12 col-md-auto"
                  label="货源"
                  v-model="stockFilter.supplyCurrent"
                  :options="stockFilter.supplyCustom">
            <template v-slot:selected-item="scope">
                {{ scope.opt.name }}
                <q-badge outline class="on-right" color="primary" v-if="scope.opt.category">
                    {{ scope.opt.category }}
                </q-badge>
            </template>
            <template v-slot:option="scope">
                <q-item
                    v-bind="scope.itemProps"
                    v-on="scope.itemEvents">
                    <div>
                        {{ scope.opt.name }}
                        <q-badge outline class="on-right" color="primary" v-if="scope.opt.category">
                            {{ scope.opt.category }}
                        </q-badge>
                    </div>
                </q-item>
            </template>
        </q-select>
        <q-input outlined dense stack-label bg-color="white"
                 class="col-shrink"
                 label="关键词"
                 v-model="stockFilter.keyname">
            <template v-slot:prepend>
                <q-icon name="fas fa-filter" color="primary" size="xs"/>
            </template>
        </q-input>
        <q-toggle class="col-shrink" v-model="stockFilter.isShow" color="orange" label="上架" left-label></q-toggle>
        <q-space></q-space>
        <q-btn class="col-shrink" color="primary" icon="search" label="搜索" @@click="loadStockData"></q-btn>
    </div>
    <q-table
        :data="stockData"
        :columns="stockColumns"
        row-key="stockId">
    </q-table>
</q-page>

<q-dialog v-model="supplyDialog">
    <q-card class="q-pb-md" style="max-width: 500px; width: 500px;">
        <q-card-section class="row items-center q-pb-none">
            <div class="text-h6">货源详情</div>
            <q-space ></q-space>
            <q-btn icon="close" flat round dense v-close-popup></q-btn>
        </q-card-section>
        <q-card-section class="q-gutter-sm">
            <q-input outlined dense stack-label bg-color="white"
                     label="商品名称"
                     :readonly="supplyCurrent.userId !== userExtend.userId"
                     v-model.trim="supplyCurrent.name"
                     ref="supplyCurrent_name"
                     :rules="[val => !!val || '必须输入商品名称',val => val.length <= 10 || '商品名称长度限制10位']">
            </q-input>
            <div class="row">
                <q-select outlined dense options-dense stack-label bg-color="white"
                          class="col"
                          label="商品分类"
                          use-input hide-selected fill-input
                          :readonly="supplyCurrent.userId !== userExtend.userId"
                          v-model.trim="supplyCurrent.category"
                          emit-value
                          map-options
                          :options="stockFilter.supplyCustom">
                </q-select>
                <q-space class="col-auto q-mx-xs"></q-space>
                <q-select outlined dense options-dense stack-label bg-color="white"
                          class="col"
                          label="发货方式"
                          :readonly="supplyCurrent.userId !== userExtend.userId"
                          v-model="supplyCurrent.deliveryType"
                          emit-value
                          map-options
                          option-value="value"
                          option-label="name"
                          :options="deliveryTypeOptions">
                    <template v-slot:selected-item="scope">
                        <q-chip
                            dense
                            class="transparent q-ma-none q-pa-none">
                            <q-icon class="on-left" color="primary" text-color="white" :name="scope.opt.icon" size="xs"></q-icon>
                            {{ scope.opt.name }}
                        </q-chip>
                    </template>
                    <template v-slot:option="scope">
                        <q-item
                            v-bind="scope.itemProps"
                            v-on="scope.itemEvents">
                            <q-chip
                                class="transparent q-ma-none q-pa-none">
                                <q-icon class="on-left" color="primary" text-color="white" :name="scope.opt.icon" size="xs"></q-icon>
                                {{ scope.opt.name }}
                            </q-chip>
                        </q-item>
                    </template>
                </q-select>
            </div>
            <div class="row">
                <q-input outlined dense stack-label bg-color="white"
                         class="col"
                         label="面值"
                         hint="建议零售价"
                         :readonly="supplyCurrent.userId !== userExtend.userId"
                         v-model.number="supplyCurrent.faceValue"
                         ref="supplyCurrent_faceValue"
                         :rules="[val => !!val || '必须输入面值']">
                </q-input>
                <q-space class="col-auto q-mx-xs"></q-space>
                <q-input outlined dense stack-label bg-color="white"
                         class="col"
                         label="成本"
                         hint="结算价格"
                         :readonly="supplyCurrent.userId !== userExtend.userId"
                         v-model.number="supplyCurrent.cost"
                         ref="supplyCurrent_cost"
                         :rules="[val => !!val || '必须输入成本']">
                </q-input>
            </div>
            <q-input outlined dense stack-label bg-color="white"
                     autogrow
                     label="商品说明"
                     :readonly="supplyCurrent.userId !== userExtend.userId"
                     v-model.trim="supplyCurrent.memo">
            </q-input>
        </q-card-section>
        <q-card-section>
            <q-btn class="float-left" color="negative" icon="delete_forever" label="移除" @@click="supplyDialogRemove" v-if="supplyCurrent.userId === userExtend.userId && supplyIndex >= 0"></q-btn>
            <q-btn class="float-right" color="warning" icon="edit" v-if="supplyCurrent.userId === userExtend.userId" :label="supplyIndex >= 0 ? '修改' : '新增'" @@click="supplyDialogEdit"></q-btn>
        </q-card-section>
    </q-card>
</q-dialog>

@section Scripts{
    <script>
   var _page = {
       data:{
           stockFilter:{
               keyname:'',
               pageIndex:1,
               pageSize:25,
               isShow:true,
               supplyCustom:[],
               supplyCurrent:{},
           },
           stockData:[],
           stockColumns:[
               {
                   align: 'left',
                   name:'name',
                   label:'卡号/名称'
               },
               {
                   align: 'left',
                   name:'memo',
                   label:'密码/说明'
               },
               {
                   align: 'left',
                   format: row => `${row.isShow}`,
                   label:''
               },
           ],
           supplyCurrent:{},
           supplyIndex:-2,//默认 -2 新增 -1 其他 索引值
           supplyDialog:false,
           btnSaveLoading:false,
       },
       beforeMount(){
           UserApi('SupplyList',{ type :'custom' },true)
              .then((response)=> {
                  if (response.data.code === 1){ 
                      this.stockFilter.supplyCustom = response.data.data.supplyCustom;
                      this.stockFilterReset();
                      this.loadStockData();
                  } else{
                      Notify.Warning('货源数据加载失败');
                  }
              })
              .catch( (error)=> {
                  Notify.Warning('接口通信错误');
                  console.error(error);
              });
       },
       computed:{
           
       },
       methods: {
           loadStockData(){
               UserApi('StockPageList',{ supplyId:this.stockFilter.supplyCurrent.supplyId,keyname:this.stockFilter.keyname, pageSize:this.stockFilter.pageSize,pageIndex:this.stockFilter.pageIndex,isShow:this.stockFilter.isShow},true)
                  .then((response)=> {
                      if (response.data.code === 1){ 
                          this.stockData = response.data.data;
                      } else{
                          Notify.Warning('卡密数据加载失败');
                      }
                  })
                  .catch( (error)=> {
                      Notify.Warning('接口通信错误');
                      console.error(error);
                  });
           },
           stockFilterReset(){
               this.stockFilter.keyname='';
               this.stockFilter.supplyCurrent=this.stockFilter.supplyCustom[0];
           },
           supplyListByFilter(){
               return _.filter(this.stockFilter.supplyCustom,(data)=>{
                   if (this.stockFilter.category){
                        return data.category === this.stockFilter.category && 
                        (data.name.toLowerCase().indexOf(this.stockFilter.keyname.toLowerCase()) > -1 || data.memo.toLowerCase().indexOf(this.stockFilter.keyname.toLowerCase()) > -1);
                   }
                   return data.name.toLowerCase().indexOf(this.stockFilter.keyname.toLowerCase()) > -1 || data.memo.toLowerCase().indexOf(this.stockFilter.keyname.toLowerCase()) > -1;
               });
           },
           supplyDialogShow(i){
               this.supplyDialog=true;
               this.supplyIndex =i;
               if (i>=0){
                   this.supplyCurrent= JSON.parse(JSON.stringify(this.stockFilter.supplyCustom[i]));
               }else{
                   this.supplyCurrent = {userId:this.userExtend.userId,name:'',category:'', memo:'', category:'', deliveryType:this.deliveryTypeOptions[0].value, isShow:true};
               }
           },
           supplyDialogEdit(){
               this.$refs.supplyCurrent_name.validate();
               this.$refs.supplyCurrent_faceValue.validate();
               this.$refs.supplyCurrent_cost.validate();
               if (!this.$refs.supplyCurrent_name.hasError && !this.$refs.supplyCurrent_faceValue.hasError && !this.$refs.supplyCurrent_cost.hasError){
                   if (this.supplyIndex >= 0 ){
                       var index = 0;
                       for (i in this.stockFilter.supplyCustom){
                           if (!this.stockFilter.supplyCustom[i].isSystem){
                               if (index === this.supplyIndex){
                                   this.$set(this.stockFilter.supplyCustom, i, JSON.parse(JSON.stringify(this.supplyCurrent)))
                                   break;
                               }
                               index++;
                           }
                       }
                   }else if (this.supplyIndex === -1){
                       this.$set(this.stockFilter.supplyCustom, this.stockFilter.supplyCustom.length, JSON.parse(JSON.stringify(this.supplyCurrent)))
                   }
                   this.supplyListAutoSave();
                   this.supplyIndex = -2;
                   this.supplyDialog=false;
                   this.supplyCurrent = {};
               }
           },
           supplyDialogRemove(){
               this.$q.dialog({
                title: '再次确认',
                message: '确定要移除名称为['+this.supplyCurrent.name+']的货源?',
                cancel: true,
                persistent: true
              }).onOk(() => {
                if (this.supplyIndex !== -2){
                      var index = 0;
                      for (i in this.stockFilter.supplyCustom){
                          if (!this.stockFilter.supplyCustom[i].isSystem){                              
                              if (index === this.supplyIndex){
                                  this.stockFilter.supplyCustom.splice(i,1);
                                  break;
                              }
                          }
                          index++;
                      }
                      this.supplyListAutoSave();
                  }
                  this.supplyIndex = -2;
                  this.supplyDialog=false;
                  this.supplyCurrent = {};
              })
           },
           supplyListAutoSave(){
               UserApi("SupplyCustomSave", this.stockFilter.supplyCustom)
                  .then((response)=> {
                      if (response.data.code === 1){ 
                          // this.supply.custom = response.data.data.supplyCustom;
                          // this.supply.system = response.data.data.supplySystem;
                      } else{
                          //Notify.Warning('保存失败，数据格式错误');
                      }
                  })
                  .catch( (error)=> {
                      Notify.Warning('接口通信错误');
                      console.error(error);
                  });
           }
       }
   };
   DeepMerge(_layout,_page);
   new Vue(_layout);
    </script>
}