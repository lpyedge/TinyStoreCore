using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Web;

namespace LPayments.Utils
{
    internal static class Core
    {
        
        public static T CreateInstance<T>(string p_SettingJson = "") where T : new()
        {
            if (string.IsNullOrWhiteSpace(p_SettingJson))
            {
                return Activator.CreateInstance<T>();
            }

            return (T) Activator.CreateInstance(typeof(T), p_SettingJson);
        }

        public static dynamic CreateInstance(Type p_Type, string p_SettingJson = "")
        {
            if (p_Type != null)
            {
                if (string.IsNullOrWhiteSpace(p_SettingJson))
                {
                    return Activator.CreateInstance(p_Type) as IPayChannel;
                }

                return Activator.CreateInstance(p_Type, p_SettingJson) as IPayChannel;
            }

            return null;
        }

        internal static string GetTimeStampMilliseconds()
        {
            return
                DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc))
                    .TotalMilliseconds.ToString("0");
        }

        internal static string GetTimeStampSeconds()
        {
            return
                DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc))
                    .TotalSeconds.ToString("0");
        }

        internal static T Parse<T>(this string p_Input, T DefaultValue = default(T)) where T : struct
        {
            var p_Res = DefaultValue;
            try
            {
                p_Res = ParseBuilder<T>.Parse(p_Input);
            }
            catch (Exception)
            {
            }

            return p_Res;
        }

        /// <summary>
        ///     为值类型提供Parse方法的动态委托生成
        /// </summary>
        /// <typeparam name="T"></typeparam>
        private static class ParseBuilder<T> where T : struct
        {
            internal static readonly Func<string, T> Parse;

            static ParseBuilder()
            {
                var pExp = Expression.Parameter(typeof(string), "p");
                var miParse = typeof(T).GetMethod("Parse", new[] {typeof(string)});
                var mcExp = Expression.Call(null, miParse, pExp);
                var exp = Expression.Lambda<Func<string, T>>(mcExp, pExp);
                Parse = exp.Compile();
            }
        }

        internal static string UriDataEncode(string p_Input, Encoding encoding = null)
        {
            //http://www.w3school.com.cn/tags/html_ref_urlencode.html
            encoding = encoding ?? Encoding.UTF8;
            if (string.IsNullOrEmpty(p_Input))
                return "";
            return HttpUtility.UrlEncode(p_Input, encoding)
                    .Replace("+", "%20")
                    .Replace("!", "%21")
                    .Replace("*", "%2a")
                    .Replace("(", "%28")
                    .Replace(")", "%29")
                    .Replace("_", "%5f")
                    .Replace(".", "%2e")
                ;
        }

        internal static string UriDataDecode(string p_Input, Encoding encoding = null)
        {
            //http://www.w3school.com.cn/tags/html_ref_urlencode.html
            encoding = encoding ?? Encoding.UTF8;
            if (string.IsNullOrEmpty(p_Input))
                return "";
            var input = p_Input.Replace("+", "%20")
                    .Replace("!", "%21")
                    .Replace("*", "%2a")
                    .Replace("(", "%28")
                    .Replace(")", "%29")
                    .Replace("_", "%5f")
                    .Replace(".", "%2e")
                ;
            return HttpUtility.UrlDecode(input, encoding);
        }

        internal static string LinkStr(this IDictionary<string, string> dic, bool asc = true, bool encode = false,
            string connectstr = "=",
            string splitstr = "&")
        {
            IOrderedEnumerable<KeyValuePair<string, string>> ordereddic =
                asc ? dic.OrderBy(p => p.Key) : dic.OrderByDescending(p => p.Key);

            return ordereddic.Aggregate("",
                    (x, y) => x + y.Key + connectstr + (encode ? UriDataEncode(y.Value) : y.Value) + splitstr)
                .TrimEnd(splitstr.ToCharArray());
        }


        internal static IDictionary<string, string> UnLinkStr(this string text, bool decode = false,
            string connectstr = "=", string splitstr = "&")
        {
            var dic = new Dictionary<string, string>();
            var list = text.Split(new string[] {splitstr}, StringSplitOptions.RemoveEmptyEntries);
            foreach (var item in list)
            {
                var kv = item.Split(new string[] {connectstr}, StringSplitOptions.None);
                if (kv.Length == 2)
                {
                    dic[kv[0]] = (decode ? UriDataDecode(kv[1]) : kv[1]);
                }
            }

            return dic;
        }

        internal static string MD5(string inputStr)
        {
            return Utils.HASHCrypto.Encrypt(Utils.HASHCrypto.Generate(Utils.HASHCrypto.CryptoEnum.MD5), inputStr);
        }

        internal static string SHA1(string inputStr)
        {
            return Utils.HASHCrypto.Encrypt(Utils.HASHCrypto.Generate(Utils.HASHCrypto.CryptoEnum.SHA1), inputStr);
        }
        
        internal static string SHA256(string inputStr)
        {
            return Utils.HASHCrypto.Encrypt(Utils.HASHCrypto.Generate(Utils.HASHCrypto.CryptoEnum.SHA256), inputStr);
        }

        //internal const string WXIconBase64 =
        //        "";

        //internal const string APIconBase64 =
        //        "";

        //internal const string JDIconBase64 =
        //    "";

        //internal const string BDIconBase64 =
        //    "";

        //internal const string QQIconBase64 =
        //        "";

        //public static string QR(string url, Type type)
        //{
        //    var ca = Context.Types.First(p => p.Value.FullName == type.FullName).Key;
        //    var iconbase64 = "";
        //    if (ca.ePayType == EPayType.QRcode)
        //    {
        //        switch (ca.eChannel)
        //        {
        //            case EChannel.AliPay:
        //                iconbase64 = Core.APIconBase64;
        //                break;

        //            case EChannel.Weixin:
        //                iconbase64 = Core.WXIconBase64;
        //                break;

        //            case EChannel.JdPay:
        //                iconbase64 = Core.JDIconBase64;
        //                break;

        //            case EChannel.BaiduPay:
        //                iconbase64 = Core.BDIconBase64;
        //                break;
        //        }
        //    }

        //    return QR(url, iconbase64);
        //}

        //public static string QR(string url, string iconbase64 = "")
        //{
        //    string imgbase64;

        //    //using (WebClient wc = new WebClient())
        //    //{
        //    //    var res = wc.DownloadData("http://my.tv.sohu.com/user/a/wvideo/getQRCode.do?width=200&height=200&text=" + HttpUtility.UrlEncode(url));

        //    //    imgbase64 = string.Format("<img width=\"150\" height=\"150\" src=\"data:image/jpg;base64,{0}\" />", Convert.ToBase64String(res));
        //    //}

        //    //using (WebClient wc = new WebClient())
        //    //{
        //    //    var res = wc.DownloadData("https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=" + HttpUtility.UrlEncode(url));

        //    //    imgbase64 = string.Format("<img width=\"150\" height=\"150\" src=\"data:image/jpg;base64,{0}\" />", Convert.ToBase64String(res));
        //    //}

        //    Bitmap icon = null;
        //    if (!string.IsNullOrWhiteSpace(iconbase64))
        //        using (var ms = new MemoryStream(Convert.FromBase64String(iconbase64)))
        //        {
        //            icon = (Bitmap)Image.FromStream(ms);
        //        }

        //    using (var qrGenerator = new QRCodeGenerator())
        //    {
        //        using (var qrCodeData = qrGenerator.CreateQrCode(url, QRCodeGenerator.ECCLevel.M))
        //        {
        //            using (var qrCode = new BitmapQRCode(qrCodeData))
        //            {
        //                var img = qrCode.GetGraphic(20, Color.Black, Color.White, icon, 20, 7, false);
        //                using (var ms = new MemoryStream())
        //                {
        //                    img.Save(ms, ImageFormat.Jpeg);
        //                    imgbase64 = Convert.ToBase64String(ms.ToArray());
        //                }
        //            }
        //        }
        //    }

        //    return imgbase64;
        //}

        //public static string FormQR(string imgbase64, string p_OrderId, double p_Amount, string p_OrderName, int size = 160)
        //{
        //    var formhtml =
        //        new StringBuilder("<div id='" + Core.PaymentFormName + "' name='" + Core.PaymentFormName +
        //                          "' style=\"display: none;margin: 0 auto; text-align: center;margin-top:100px;\">");
        //    formhtml.Append("<h2>扫码付款</h2>");
        //    formhtml.AppendFormat("<h3>订单名称:{0}</h3>", p_OrderName);
        //    formhtml.AppendFormat("<h3>订单号:{0}</h3>", p_OrderId);
        //    formhtml.AppendFormat("<h3>金额:{0}</h3>", p_Amount.ToString("0.##"));
        //    formhtml.Append(string.Format(
        //        "<img width=\"" + size + "\" height=\"" + size +
        //        "\" src=\"data:image/jpg;base64,{0}\" />", imgbase64));
        //    formhtml.Append("</div>");
        //    if (Context.AutoSubmit)
        //        formhtml.Append("<script>document.getElementById('" + Core.PaymentFormName +
        //                        "').style.display = '';</script>");
        //    return formhtml.ToString();
        //}

        // private static Dictionary<string, string> DescriptionDic = new Dictionary<string, string>();
        // private static object lockobj = new object();
        //
        // public static string Description(Enum obj)
        // {
        //     var key = obj.GetType().FullName + obj.ToString();
        //     if (!DescriptionDic.ContainsKey(key))
        //     {
        //         lock (lockobj)
        //         {
        //             if (!DescriptionDic.ContainsKey(key))
        //             {
        //                 var fild = obj.GetType().GetField(obj.ToString());
        //                 if (fild.IsDefined(typeof(DescriptionAttribute), false))
        //                 {
        //                     DescriptionAttribute dec = (DescriptionAttribute) fild
        //                         .GetCustomAttributes(typeof(DescriptionAttribute), false).FirstOrDefault();
        //                     DescriptionDic[key] = dec?.Description ?? "";
        //                 }
        //             }
        //         }
        //     }
        //
        //     return DescriptionDic[key];
        // }
        
        private static Dictionary<string, dynamic> EnumAttributeDic = new();
        private static object lockobj = new();
        
        public static T EnumAttribute<T>(Enum obj) where T : Attribute
        {
            var key = obj.GetType().FullName + obj.ToString();
          
            if (!EnumAttributeDic.ContainsKey(key))
            {
                lock (lockobj)
                {
                    if (!EnumAttributeDic.ContainsKey(key))
                    {
                        var fild = obj.GetType().GetField(obj.ToString());
                        if (fild.IsDefined(typeof(T), false))
                        {
                            T attrbute = (T) fild
                                .GetCustomAttributes(typeof(T), false).FirstOrDefault();
                            EnumAttributeDic[key] = attrbute;
                        }
                        else
                        {
                            EnumAttributeDic[key] = default(T);
                        }
                    }
                }
            }

            return EnumAttributeDic[key];
        }
        
        public static List<T> TypeAttribute<T>(this Type p_Type) where T : Attribute
        {
            return  p_Type.GetCustomAttributes( typeof(T),true).Select(p=> (T)p).ToList();
        }
    }
}